{"version":3,"file":"delegate.js","sourceRoot":"","sources":["../../src/utils/delegate.ts"],"names":[],"mappings":"AAAA,wHAAwH;AACxH,oDAAoD;AACpD,8EAA8E;AAC9E,sFAAsF;AACtF,GAAG;AACH,qGAAqG;AACrG,wHAAwH;AAWxH,MAAM,wBAAwB;IAC5B,KAAK,CAAC,UAAU,CAAkB,IAAS,EAAE,MAAuB;QAClE,MAAM,eAAe,GAAG,MAAM,EAAE,aAAa,IAAI,QAAQ,CAAC,IAAI,CAAC;QAC/D,eAAe,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAClC,OAAO,IAAI,CAAC;IACd,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,IAAS;QACxB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;CACF;AAED,MAAM,YAAY,GAAG,IAAI,wBAAwB,EAAE,CAAC;AACpD,IAAI,eAAe,GAAsB,YAAY,CAAC;AAEtD,MAAM,UAAU,yBAAyB,CAAC,QAA2B;IACnE,eAAe,GAAG,QAAQ,CAAC;AAC7B,CAAC;AAED,MAAM,CAAC,MAAM,eAAe,GAAG,GAAG,EAAE;IAClC,OAAO,eAAe,CAAC;AACzB,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,eAAe,GAAG,GAAG,EAAE,CAAC,YAAY,CAAC","sourcesContent":["////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n/// Copied from the the original Siemens IX library.\r\n/// Represents an abstraction how to add the view to the different containers.\r\n/// The default delegator uses the HTML DOM API to attach the element to the DOM tree.\r\n///\r\n/// Reference: https://github.com/siemens/ix/blob/main/packages/core/src/components/utils/delegate.ts\r\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\r\n\r\nexport type DelegateConfig = {\r\n  parentElement?: Element;\r\n};\r\n\r\nexport interface FrameworkDelegate {\r\n  attachView<R = HTMLElement>(view: any, config?: DelegateConfig): Promise<R>;\r\n  removeView(view: any): Promise<void>;\r\n}\r\n\r\nclass DefaultFrameworkDelegate implements FrameworkDelegate {\r\n  async attachView<R = HTMLElement>(view: any, config?: DelegateConfig): Promise<R> {\r\n    const attachToElement = config?.parentElement ?? document.body;\r\n    attachToElement.appendChild(view);\r\n    return view;\r\n  }\r\n\r\n  async removeView(view: any) {\r\n    view.remove();\r\n  }\r\n}\r\n\r\nconst coreDelegate = new DefaultFrameworkDelegate();\r\nlet currentDelegate: FrameworkDelegate = coreDelegate;\r\n\r\nexport function registerFrameworkDelegate(delegate: FrameworkDelegate) {\r\n  currentDelegate = delegate;\r\n}\r\n\r\nexport const resolveDelegate = () => {\r\n  return currentDelegate;\r\n};\r\n\r\nexport const getCoreDelegate = () => coreDelegate;\r\n"]}