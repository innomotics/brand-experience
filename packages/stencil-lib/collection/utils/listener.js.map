{"version":3,"file":"listener.js","sourceRoot":"","sources":["../../src/utils/listener.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAO3C,MAAM,cAAc,GAAoB;IACtC,MAAM,EAAE,QAAQ;IAChB,cAAc,EAAE,IAAI;CACrB,CAAC;AAEF,MAAM,UAAU,cAAc,CAAC,KAAa,EAAE,UAA2B,EAAE;IACzE,MAAM,IAAI,GAAG;QACX,GAAG,cAAc;QACjB,GAAG,OAAO;KACX,CAAC;IAEF,IAAI,QAAa,CAAC;IAClB,MAAM,OAAO,GAAG,CAAC,KAAY,EAAE,EAAE;QAC/B,QAAQ,CAAC,KAAK,CAAC,CAAC;IAClB,CAAC,CAAC;IAEF,MAAM,YAAY,GAAG;QACnB,EAAE,EAAE,CAAC,eAAoB,EAAE,EAAE;YAC3B,QAAQ,GAAG,eAAe,CAAC;QAC7B,CAAC;QAED,SAAS,EAAE,IAAI,CAAC,cAAc;QAE9B,MAAM,EAAE,CAAC,KAAc,EAAE,EAAE;YACzB,YAAY,CAAC,SAAS,GAAG,KAAK,CAAC;YAE/B,IAAI,KAAK,EAAE,CAAC;gBACV,gBAAgB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YACnC,CAAC;iBAAM,CAAC;gBACN,mBAAmB,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YACtC,CAAC;QACH,CAAC;QAED,OAAO,EAAE,GAAG,EAAE;YACZ,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC;KACF,CAAC;IAEF,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACzC,OAAO,YAAY,CAAC;AACtB,CAAC;AAED,MAAM,UAAU,UAAU,CAAI,KAAa,EAAE,KAA4B;IACvE,OAAO,CAAC,KAAU,EAAE,UAAkB,EAAE,EAAE;QACxC,MAAM,EAAE,iBAAiB,EAAE,mBAAmB,EAAE,oBAAoB,EAAE,GAAG,KAAK,CAAC;QAE/E,IAAI,KAAK,EAAE,CAAC;YACV,KAAK,CAAC,mBAAmB,GAAG;gBAC1B,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;gBAC9B,IAAI,CAAC,SAAS,UAAU,EAAE,CAAC,EAAE,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC;gBACjD,OAAO,mBAAmB,IAAI,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/D,CAAC,CAAC;QACJ,CAAC;QAED,KAAK,CAAC,iBAAiB,GAAG;YACxB,MAAM,QAAQ,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC;YACvC,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;YAC9B,MAAM,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;YAEhC,IAAI,CAAC,SAAS,UAAU,EAAE,CAAC,GAAG,QAAQ,CAAC;YAEvC,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAC/B,OAAO,iBAAiB,IAAI,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3D,CAAC,CAAC;QAEF,KAAK,CAAC,oBAAoB,GAAG;YAC3B,MAAM,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;YAE9B,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,UAAU,EAAE,CAAC,EAAE,CAAC;gBACxC,IAAI,CAAC,SAAS,UAAU,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC;gBACvC,IAAI,CAAC,SAAS,UAAU,EAAE,CAAC,GAAG,IAAI,CAAC;YACrC,CAAC;YAED,OAAO,oBAAoB,IAAI,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjE,CAAC,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { getElement } from '@stencil/core';\r\n\r\nexport type ListenerOptions = {\r\n  target?: 'window';\r\n  defaultEnabled?: boolean;\r\n};\r\n\r\nconst defaultOptions: ListenerOptions = {\r\n  target: 'window',\r\n  defaultEnabled: true,\r\n};\r\n\r\nexport function createListener(event: string, options: ListenerOptions = {}) {\r\n  const opts = {\r\n    ...defaultOptions,\r\n    ...options,\r\n  };\r\n\r\n  let callback: any;\r\n  const onEvent = (event: Event) => {\r\n    callback(event);\r\n  };\r\n\r\n  const resultObject = {\r\n    on: (onEventCallback: any) => {\r\n      callback = onEventCallback;\r\n    },\r\n\r\n    isEnabled: opts.defaultEnabled,\r\n\r\n    enable: (state: boolean) => {\r\n      resultObject.isEnabled = state;\r\n\r\n      if (state) {\r\n        addEventListener(event, onEvent);\r\n      } else {\r\n        removeEventListener(event, onEvent);\r\n      }\r\n    },\r\n\r\n    destroy: () => {\r\n      resultObject.enable(false);\r\n    },\r\n  };\r\n\r\n  resultObject.enable(opts.defaultEnabled);\r\n  return resultObject;\r\n}\r\n\r\nexport function OnListener<T>(event: string, fnExp?: (self: T) => boolean) {\r\n  return (proto: any, methodName: string) => {\r\n    const { componentWillLoad, componentWillRender, disconnectedCallback } = proto;\r\n\r\n    if (fnExp) {\r\n      proto.componentWillRender = function () {\r\n        const host = getElement(this);\r\n        host[`__ix__${methodName}`]?.enable(fnExp(this));\r\n        return componentWillRender && componentWillRender.call(this);\r\n      };\r\n    }\r\n\r\n    proto.componentWillLoad = function () {\r\n      const listener = createListener(event);\r\n      const host = getElement(this);\r\n      const method = this[methodName];\r\n\r\n      host[`__ix__${methodName}`] = listener;\r\n\r\n      listener.on(method.bind(this));\r\n      return componentWillLoad && componentWillLoad.call(this);\r\n    };\r\n\r\n    proto.disconnectedCallback = function () {\r\n      const host = getElement(this);\r\n\r\n      if (host && host[`__ix__${methodName}`]) {\r\n        host[`__ix__${methodName}`]?.destroy();\r\n        host[`__ix__${methodName}`] = null;\r\n      }\r\n\r\n      return disconnectedCallback && disconnectedCallback.call(this);\r\n    };\r\n  };\r\n}\r\n"]}