{"version":3,"file":"inno-footer-item.js","sourceRoot":"","sources":["../../../src/components/inno-footer-item/inno-footer-item.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAEzE,MAAM,gBAAgB,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,WAAW,EAAE,MAAM,CAAC,CAAC;AAEzD;;;;;;GAMG;AAMH,MAAM,OAAO,cAAc;;uBAUG,OAAO;;IARnC,WAAW,CAAc;IAWzB,YAAY,CAAC,UAA4B;QACvC,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;QAC1B,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,cAAc;QACZ,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;QAC3C,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,QAAQ,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC;YACrD,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,OAAO,EAAE,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;gBACnE,OAAuB,CAAC,OAAO,CAAC,mBAAmB,GAAG,IAAI,CAAC,OAAO,CAAC;YACtE,CAAC;QACH,CAAC;IACH,CAAC;IAED,YAAY;QACV,OAAO;YACL,KAAK,EAAE,IAAI,CAAC,OAAO,KAAK,OAAO;YAC/B,IAAI,EAAE,IAAI,CAAC,OAAO,KAAK,MAAM;SAC9B,CAAC;IACJ,CAAC;IAED,MAAM;QACJ,OAAO,CACL,EAAC,IAAI,qDAAC,KAAK,EAAE,IAAI,CAAC,YAAY,EAAE;YAC9B,8DAAa,CACR,CACR,CAAC;IACJ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACF","sourcesContent":["import { Component, Host, h, Prop, Element, Watch } from '@stencil/core';\r\n\r\nconst IGNORED_ELEMENTS = ['A', 'P', 'inno-icon', 'SPAN'];\r\n\r\n/**\r\n * Represents an inno-footer item.\r\n *\r\n * Wrap an element for the inno-footer parent.\r\n *\r\n * See the InnoFooter docs for more information.\r\n */\r\n@Component({\r\n  tag: 'inno-footer-item',\r\n  styleUrl: 'inno-footer-item.scss',\r\n  scoped: true,\r\n})\r\nexport class InnoFooterItem {\r\n  @Element()\r\n  hostElement: HTMLElement;\r\n\r\n  /**\r\n   * Theme variant property.\r\n   * Inherited from the parent.\r\n   * Can be overridden if explicitly defined.\r\n   */\r\n  @Prop({ mutable: true })\r\n  variant: 'light' | 'dark' = 'light';\r\n\r\n  @Watch('variant')\r\n  watchVariant(newVariant: 'light' | 'dark') {\r\n    this.variant = newVariant;\r\n    this.propagateStyle();\r\n  }\r\n\r\n  componentDidLoad() {\r\n    this.propagateStyle();\r\n  }\r\n\r\n  propagateStyle() {\r\n    const children = this.hostElement.children;\r\n    for (let index = 0; index < children.length; index++) {\r\n      const element = children[index];\r\n      if (element?.tagName && !IGNORED_ELEMENTS.includes(element.tagName)) {\r\n        (element as HTMLElement).dataset.innoFooterItemStyle = this.variant;\r\n      }\r\n    }\r\n  }\r\n\r\n  variantStyle() {\r\n    return {\r\n      light: this.variant === 'light',\r\n      dark: this.variant === 'dark',\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host class={this.variantStyle()}>\r\n        <slot></slot>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}