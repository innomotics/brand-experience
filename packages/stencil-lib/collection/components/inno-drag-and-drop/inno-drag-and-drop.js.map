{"version":3,"file":"inno-drag-and-drop.js","sourceRoot":"","sources":["../../../src/components/inno-drag-and-drop/inno-drag-and-drop.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Element, Event, EventEmitter, Host, Method, Prop, State, h } from '@stencil/core';\r\nimport { DragAndDropTexts } from './drag-and-drop-texts';\r\n\r\n@Component({\r\n  tag: 'inno-drag-and-drop',\r\n  styleUrl: 'inno-drag-and-drop.scss',\r\n  scoped: true,\r\n})\r\nexport class InnoDragAndDrop {\r\n\r\n  /**\r\n   * Color variant of the component.\r\n   */\r\n  @Prop() variant: 'dark' | 'light' = 'dark';\r\n\r\n  /**\r\n   * The accept attribute specifies the types of files that the server accepts (that can be submitted through a file upload).\r\n   * \"https://www.w3schools.com/tags/att_input_accept.asp\"\r\n   */\r\n  @Prop() accept: string;\r\n\r\n  /**\r\n   * If multiple is true the user can drop or select multiple files\r\n   */\r\n  @Prop() multiple: boolean = false;\r\n\r\n  /**\r\n   * Disable all input events\r\n   */\r\n  @Prop({ mutable: true }) disabled: boolean = false;\r\n\r\n  /**\r\n   * After a file is uploaded you can set the upload component to a defined state\r\n   */\r\n  @Prop({ mutable: true }) state: 'SELECT_FILE' | 'LOADING' | 'UPLOAD_FAILED' | 'UPLOAD_SUCCESS' = 'SELECT_FILE';\r\n\r\n  /**\r\n   * 'firstLineText' and 'secondLineText': will be used by state = 'SELECT_FILE',\r\n   * <br/><br/>'orText': The word 'or' or its equivalent translation. Hidden if only 'firstLineText' or only 'secondLineText' is used,\r\n   * <br/><br/>'dragText': displayed when file is dragged over the component, can be omitted,\r\n   * <br/><br/>'loadingText': will be used by state = 'LOADING',\r\n   * <br/><br/>'uploadFailedText': will be used by state = 'UPLOAD_FAILED',\r\n   * <br/><br/>'uploadSuccessText': will be used by state = 'UPLOAD_SUCCESS',\r\n   * <br/><br/>'acceptedFileTypesText': label for accepted file types,\r\n   * <br/><br/>'uploadDisabledText': label for disabled state\r\n   */\r\n  @Prop({ mutable: true }) texts: DragAndDropTexts = {\r\n    firstLineText: null,\r\n    secondLineText: null,\r\n    orText: null,\r\n    dragText: null,\r\n    loadingText: null,\r\n    uploadFailedText: null,\r\n    uploadSuccessText: null,\r\n    acceptedFileTypesText: null,\r\n    uploadDisabledText: null\r\n  };\r\n\r\n  @Event() filesChanged: EventEmitter<Array<File>>;\r\n\r\n  @Element() hostElement!: HTMLInnoDragAndDropElement;\r\n\r\n  @State() isFileOver = false;\r\n\r\n  private filesToUpload: Array<File>;\r\n\r\n  get inputElement(): HTMLInputElement {\r\n    return this.hostElement.querySelector('#upload-browser');\r\n  }\r\n\r\n  private fileDropped(evt: DragEvent) {\r\n    evt.preventDefault();\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    const file: File | FileList = evt.dataTransfer.files;\r\n    this.isFileOver = false;\r\n\r\n    this.filesToUpload = this.convertToFileArray(file);\r\n    this.filesChanged.emit(this.filesToUpload);\r\n  }\r\n\r\n  private fileOver(event: DragEvent) {\r\n    if (this.state !== 'LOADING') {\r\n      event.preventDefault();\r\n      event.dataTransfer.dropEffect = 'move';\r\n    }\r\n\r\n    if (!this.multiple && event.dataTransfer.items.length > 1) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      event.dataTransfer.effectAllowed = 'none';\r\n      event.dataTransfer.dropEffect = 'none';\r\n    } else {\r\n      this.isFileOver = true;\r\n    }\r\n  }\r\n\r\n  private fileLeave() {\r\n    this.isFileOver = false;\r\n  }\r\n\r\n  private fileChangeEvent(event: any) {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n    this.filesToUpload = this.convertToFileArray(event.target.files);\r\n\r\n    this.filesChanged.emit(this.filesToUpload);\r\n\r\n    // Workaround for bug in native input element, that prevents the user from uploading\r\n    // a file with the same name as the most recent one, but with changed content.\r\n    this.inputElement.type = '';\r\n    this.inputElement.type = 'file';\r\n  }\r\n\r\n  private convertToFileArray(filesFromEvent: FileList | File): File[] {\r\n    let files = [];\r\n    if (filesFromEvent instanceof FileList) {\r\n      files = Array.from(filesFromEvent);\r\n    } else {\r\n      files = [filesFromEvent];\r\n    }\r\n    return files;\r\n  }\r\n\r\n  @Method()\r\n  async setFilesToUpload(obj: any) {\r\n    this.filesToUpload = obj;\r\n  }\r\n\r\n  private renderBasic() {\r\n    let renderFirstLine: boolean = this.texts.firstLineText != null && this.texts.firstLineText.replace(/\\s/g, '').length > 0;\r\n    let renderSecondLine: boolean = this.texts.secondLineText != null && this.texts.secondLineText.replace(/\\s/g, '').length > 0;\r\n    let renderOr: boolean = renderFirstLine && renderSecondLine;\r\n    let renderFileTypesText: boolean = this.texts.acceptedFileTypesText != null && this.texts.acceptedFileTypesText.replace(/\\s/g, '').length > 0;\r\n    let ignoreDragText: boolean = this.texts.dragText == null || this.texts.dragText.replace(/\\s/g, '').length === 0\r\n\r\n    return (\r\n      <div class=\"state\">\r\n        <inno-icon icon='upload' size={48}></inno-icon>\r\n        <div class={{ \"drag-and-drop-texts\": true, \"show-always\": ignoreDragText }}>\r\n          {renderFirstLine ? <span class=\"first-line-text\">{this.texts.firstLineText}</span> : null}\r\n          {renderOr ? <span class=\"or-text\">{this.texts.orText}</span> : null}\r\n          {renderSecondLine ? <span class=\"second-line-text\">{this.texts.secondLineText}</span> : null}\r\n        </div>\r\n        <div class={{ \"drag-text\": true, hidden: ignoreDragText }}>{this.texts.dragText}</div>\r\n        {renderFileTypesText ? <span class=\"file-types-text\">{this.texts.acceptedFileTypesText}</span> : null}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderDisabled() {\r\n    return (\r\n      <div class=\"state\">\r\n        <inno-icon icon='close' size={48}></inno-icon>\r\n        <span class=\"disabled-text\">{this.texts.uploadDisabledText}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderLoading() {\r\n    return (\r\n      <div class=\"state\">\r\n        <inno-loader size={48} variant={this.variant === 'dark' ? 'light' : 'dark'}></inno-loader>\r\n        <span class=\"loading-text\">{this.texts.loadingText}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderSuccess() {\r\n    return (\r\n      <div class=\"state\">\r\n        <inno-icon icon='check_checkbox' size={48}></inno-icon>\r\n        <span class=\"loading-text\">{this.texts.uploadSuccessText}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderUploadState() {\r\n    if (this.disabled) {\r\n      return this.renderDisabled();\r\n    }\r\n\r\n    switch (this.state) {\r\n      case 'LOADING':\r\n        return this.renderLoading();\r\n      case 'UPLOAD_SUCCESS':\r\n        return this.renderSuccess();\r\n      case 'SELECT_FILE':\r\n      case 'UPLOAD_FAILED':\r\n      default:\r\n        return this.renderBasic();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div\r\n          class={{\r\n            'file-upload-area': true,\r\n            'file-over':\r\n              this.state !== 'LOADING' && this.isFileOver,\r\n            checking: this.state === 'LOADING',\r\n            success: this.state === 'UPLOAD_SUCCESS',\r\n            disabled: this.disabled,\r\n            dark: this.variant === 'dark',\r\n            light: this.variant === 'light'\r\n          }}\r\n          onDrop={(e) => {\r\n            if (this.state !== 'LOADING') {\r\n              this.fileDropped(e);\r\n            }\r\n          }}\r\n          onDragOver={(e) => this.fileOver(e)}\r\n          onDragLeave={() => this.fileLeave()}\r\n          draggable={!this.disabled}\r\n          onClick={() => this.inputElement.click()}\r\n        >\r\n          {this.renderUploadState()}\r\n          <div>\r\n            <input\r\n              multiple={this.multiple}\r\n              type=\"file\"\r\n              class=\"upload-browser\"\r\n              id=\"upload-browser\"\r\n              onChange={(e) => {\r\n                this.fileChangeEvent(e);\r\n              }}\r\n              accept={this.accept}\r\n            />\r\n          </div>\r\n        </div>\r\n        {this.state === 'UPLOAD_FAILED'\r\n          ? <span class={{ \"error-text\": true, dark: this.variant === 'dark', light: this.variant === 'light' }}>{this.texts.uploadFailedText}</span> : null}\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}\r\n"]}