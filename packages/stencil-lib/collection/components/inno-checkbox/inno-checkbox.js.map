{"version":3,"file":"inno-checkbox.js","sourceRoot":"","sources":["../../../src/components/inno-checkbox/inno-checkbox.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Host, Prop, h, Event, EventEmitter, Element, Listen, State, AttachInternals } from '@stencil/core';\r\nimport { a11yBoolean } from '../../utils/a11y';\r\nimport { isNotPresent } from '../../utils/utils';\r\n\r\n/**\r\n * Checkbox for Innomatics design system.\r\n */\r\n@Component({\r\n  tag: 'inno-checkbox',\r\n  styleUrl: 'inno-checkbox.scss',\r\n  scoped: true,\r\n  formAssociated: true,\r\n})\r\nexport class InnoCheckbox {\r\n  @Element()\r\n  hostElement: HTMLElement;\r\n\r\n  @AttachInternals()\r\n  elementInternals: ElementInternals;\r\n\r\n  @State()\r\n  isFocused = false;\r\n\r\n  /**\r\n   * Theme variant of the component.\r\n   */\r\n  @Prop({ mutable: true })\r\n  variant: 'dark' | 'light' = 'light';\r\n\r\n  /**\r\n   * The tab index.\r\n   */\r\n  @Prop({ mutable: true })\r\n  tabIdx: number = 0;\r\n\r\n  /**\r\n   * Form entry name.\r\n   */\r\n  @Prop()\r\n  name: string;\r\n\r\n  /**\r\n   * Label to show.\r\n   */\r\n  @Prop()\r\n  label = '';\r\n\r\n  /**\r\n   * Whether element is checked.\r\n   */\r\n  @Prop({ mutable: true, reflect: true })\r\n  checked: boolean | undefined;\r\n\r\n  /**\r\n   * Whether indeterminate state is enabled for the component.\r\n   * The component is in indeterminate state if\r\n   * it is explicity requested\r\n   * and the checked status is not defined\r\n   */\r\n  @Prop()\r\n  indeterminate: boolean = false;\r\n\r\n  /**\r\n   * Whether component is disabled.\r\n   * In this state no other state effects are applied to the element like error.\r\n   */\r\n  @Prop({ mutable: true, reflect: true })\r\n  disabled = false;\r\n\r\n  /**\r\n   * Whether the component is readonly.\r\n   * In this state no other state effects are applied to the element like error.\r\n   */\r\n  @Prop({ mutable: true, reflect: true })\r\n  readonly = false;\r\n\r\n  /**\r\n   * Mark the component as required and show the required marker.\r\n   * Validation is performed with this property.\r\n   */\r\n  @Prop({ mutable: true, reflect: true })\r\n  required = false;\r\n\r\n  /**\r\n   * Whether the element is in error state.\r\n   * Error state can be defined if manual error handling is required.\r\n   */\r\n  @Prop()\r\n  error = false;\r\n\r\n  /**\r\n   * Checked status has been changed.\r\n   */\r\n  @Event()\r\n  valueChange: EventEmitter<boolean>;\r\n\r\n  formDisabledCallback(disabled: boolean) {\r\n    this.disabled = disabled;\r\n  }\r\n\r\n  @Listen('focusin')\r\n  onFocus() {\r\n    if (this.elementInDisabledInteractionMode()) {\r\n      this.isFocused = false;\r\n    } else {\r\n      this.isFocused = true;\r\n    }\r\n  }\r\n\r\n  @Listen('focusout')\r\n  onFocusOut() {\r\n    this.isFocused = false;\r\n  }\r\n\r\n  @Listen('keydown')\r\n  handleKeyDown(ev: KeyboardEvent) {\r\n    if (ev.key === 'Enter') {\r\n      this.changeCheckedState(!this.checked);\r\n    }\r\n  }\r\n\r\n  // Check whether the component cannot be interacted\r\n  // Like disabled or readonly modes.\r\n  elementInDisabledInteractionMode() {\r\n    return this.disabled || this.readonly;\r\n  }\r\n\r\n  changeCheckedState(newState: boolean) {\r\n    if (this.elementInDisabledInteractionMode()) {\r\n      return;\r\n    }\r\n\r\n    this.checked = newState;\r\n    this.valueChange.emit(this.checked);\r\n  }\r\n\r\n  checkRequiredState(): boolean {\r\n    if (this.elementInDisabledInteractionMode()) {\r\n      return false;\r\n    }\r\n\r\n    return this.required;\r\n  }\r\n\r\n  checkErrorState(): boolean {\r\n    if (this.elementInDisabledInteractionMode()) {\r\n      return false;\r\n    }\r\n\r\n    // No error state for checked state\r\n    // Only valid error state for now is the required and not checked case\r\n    // The error class interferes with the hover and active classes\r\n    if (this.checked || this.checkIndeterminateState()) {\r\n      return false;\r\n    }\r\n\r\n    if (this.error) {\r\n      return true;\r\n    }\r\n\r\n    return !this.elementInternals.validity.valid;\r\n  }\r\n\r\n  checkReadonlyState(): boolean {\r\n    return this.disabled ? false : this.readonly;\r\n  }\r\n\r\n  // Value is undefined (no exact value or interaction)\r\n  // and indeterminate is explicitly requested\r\n  checkIndeterminateState(): boolean {\r\n    return isNotPresent(this.checked) && this.indeterminate;\r\n  }\r\n\r\n  commonStyles() {\r\n    return {\r\n      light: this.variant === 'light',\r\n      dark: this.variant === 'dark',\r\n      checked: this.checked,\r\n      focus: this.isFocused,\r\n      disabled: this.disabled,\r\n      error: this.checkErrorState(),\r\n      readonly: this.checkReadonlyState(),\r\n      required: this.checkRequiredState(),\r\n      indeterminate: this.checkIndeterminateState(),\r\n    };\r\n  }\r\n\r\n  inputElement() {\r\n    return (\r\n      <input\r\n        type=\"checkbox\"\r\n        aria-checked={a11yBoolean(this.checked)}\r\n        tabIndex={-1}\r\n        name={this.name}\r\n        disabled={this.disabled}\r\n        checked={this.checked}\r\n        required={this.required}\r\n        onChange={event => this.changeCheckedState((event.target as any).checked)}\r\n      />\r\n    );\r\n  }\r\n\r\n  checkboxComponent() {\r\n    const classes = {\r\n      ...this.commonStyles(),\r\n      checkbox: true,\r\n    };\r\n\r\n    return (\r\n      <div class={classes} onClick={() => this.changeCheckedState(!this.checked)}>\r\n        {this.checkSignComponent()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  checkSignComponent() {\r\n    const classes = {\r\n      ...this.commonStyles(),\r\n      checksign: true,\r\n    };\r\n\r\n    return <div class={classes}></div>;\r\n  }\r\n\r\n  labelComponent() {\r\n    const classes = {\r\n      ...this.commonStyles(),\r\n      label: true,\r\n    };\r\n    if (this.label != null && this.label !== '') {\r\n      return (\r\n        <span class={classes} onClick={() => this.changeCheckedState(!this.checked)}>\r\n          {this.label}\r\n        </span>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const tabIndexValue = this.elementInDisabledInteractionMode() ? -1 : this.tabIdx;\r\n\r\n    return (\r\n      <Host tabIndex={tabIndexValue} role=\"checkbox\" aria-checked={a11yBoolean(this.checked)}>\r\n        {this.inputElement()}\r\n        {this.checkboxComponent()}\r\n        {this.labelComponent()}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}