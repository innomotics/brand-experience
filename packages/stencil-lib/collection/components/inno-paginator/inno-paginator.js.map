{"version":3,"file":"inno-paginator.js","sourceRoot":"","sources":["../../../src/components/inno-paginator/inno-paginator.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Event, Element, Component, Host, h, Prop, EventEmitter } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'inno-paginator',\r\n  styleUrl: 'inno-paginator.scss',\r\n  scoped: true,\r\n})\r\nexport class InnoPaginator {\r\n  private readonly maxCountPages = 8;\r\n\r\n  @Element() hostElement!: HTMLInnoPaginatorElement;\r\n\r\n  @Prop({ mutable: true }) variant: 'dark' | 'light' = 'light';\r\n\r\n  /**\r\n   * Total number of pages\r\n   */\r\n  @Prop({ mutable: true }) pageCount: number;\r\n\r\n  /**\r\n   * One based index of currently selected page\r\n   */\r\n  @Prop({ mutable: true }) selectedPage = 1;\r\n\r\n  /**\r\n   * Page selection event\r\n   */\r\n  @Event() pageSelected: EventEmitter<number>;\r\n\r\n  /**\r\n   * Item count change event\r\n   */\r\n  @Event() itemCountChanged: EventEmitter<number>;\r\n\r\n  private selectPage(index: number) {\r\n    if (index < 1) {\r\n      this.selectedPage = 1;\r\n    } else if (index > this.pageCount) {\r\n      this.selectedPage = this.pageCount;\r\n    } else {\r\n      this.selectedPage = index;\r\n    }\r\n\r\n    this.pageSelected.emit(this.selectedPage);\r\n  }\r\n\r\n  private next() {\r\n    if (this.selectedPage !== this.pageCount) {\r\n      this.selectPage(this.selectedPage + 1);\r\n    }\r\n  }\r\n\r\n  private prev() {\r\n    if (this.selectedPage !== 1) {\r\n      this.selectPage(this.selectedPage - 1);\r\n    }\r\n  }\r\n\r\n  private first() {\r\n    if (this.selectedPage !== 1) {\r\n      this.selectPage(1);\r\n    }\r\n  }\r\n\r\n  private last() {\r\n    if (this.selectedPage !== this.pageCount) {\r\n      this.selectPage(this.pageCount);\r\n    }\r\n  }\r\n\r\n  private getPageButton(index: number) {\r\n    return <button class={{ selected: this.selectedPage == index, light: this.variant == 'light', dark: this.variant == 'dark' }} onClick={() => this.selectPage(index)}>{index}</button>;\r\n  }\r\n\r\n  private renderPageButtons() {\r\n    const pagesBeforeOverflow = Math.floor(this.maxCountPages / 2);\r\n    const hasOverflow = this.pageCount > this.maxCountPages;\r\n    const hasOverflowStart = hasOverflow && this.selectedPage > pagesBeforeOverflow;\r\n    const hasOverflowEnd = hasOverflow && this.selectedPage <= this.pageCount - pagesBeforeOverflow;\r\n    const pageButtons = [];\r\n\r\n    let start = 1;\r\n    let end = Math.min(this.pageCount, this.maxCountPages);\r\n    let pageCount = Math.floor((this.maxCountPages - 4) / 2);\r\n\r\n    if (hasOverflowStart) {\r\n      const baseButtonProps = {\r\n        onClick: () => {\r\n          if (hasOverflowEnd) {\r\n            this.selectPage(this.selectedPage - Math.max(0, 2 * pageCount + 1));\r\n          } else {\r\n            this.selectPage(this.pageCount - this.maxCountPages);\r\n          }\r\n        }\r\n      };\r\n      pageButtons.push(<button class={{ light: this.variant == 'light', dark: this.variant == 'dark' }} {...baseButtonProps}>...</button>);\r\n\r\n      if (hasOverflowEnd) {\r\n        start = this.pageCount - this.maxCountPages + 2;\r\n      } else {\r\n        start = this.pageCount - this.maxCountPages + 3;\r\n        end = this.pageCount;\r\n      }\r\n    }\r\n\r\n    if (hasOverflowEnd) {\r\n      if (hasOverflowStart) {\r\n        start = this.selectedPage - pageCount;\r\n        end = this.selectedPage + pageCount;\r\n      } else {\r\n        end = this.maxCountPages - 2;\r\n      }\r\n    }\r\n\r\n    for (let i = start; i <= end; i++) {\r\n      pageButtons.push(this.getPageButton(i));\r\n    }\r\n\r\n    if (hasOverflowEnd) {\r\n      const baseButtonProps = {\r\n        onClick: () => {\r\n          if (hasOverflowStart) {\r\n            this.selectPage(this.selectedPage + Math.max(0, 2 * pageCount + 1));\r\n          } else {\r\n            this.selectPage(this.maxCountPages - 1);\r\n          }\r\n        }\r\n      };\r\n      pageButtons.push(<button class={{ light: this.variant == 'light', dark: this.variant == 'dark' }} {...baseButtonProps}>...</button>);\r\n    }\r\n\r\n    return <span class=\"page-buttons\">{pageButtons}</span>;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <button disabled={this.selectedPage === 0} class={{ light: this.variant == 'light', dark: this.variant == 'dark' }} onClick={() => this.first()}>\r\n          <inno-icon size={32} icon={'arrow_double_left'} variant={this.variant}></inno-icon>\r\n        </button>\r\n        <button disabled={this.selectedPage === 0} class={{ light: this.variant == 'light', dark: this.variant == 'dark' }} onClick={() => this.prev()}>\r\n          <inno-icon size={32} icon={'arrowhead_left'} variant={this.variant}></inno-icon>\r\n        </button>\r\n        <span class=\"basic-pagination\">{this.renderPageButtons()} </span>\r\n        <button disabled={this.selectedPage === this.pageCount} class={{ light: this.variant == 'light', dark: this.variant == 'dark' }} onClick={() => this.next()}>\r\n          <inno-icon size={32} icon={'arrowhead_right'} variant={this.variant}></inno-icon>\r\n        </button>\r\n        <button disabled={this.selectedPage === this.pageCount} class={{ light: this.variant == 'light', dark: this.variant == 'dark' }} onClick={() => this.last()}>\r\n          <inno-icon size={32} icon={'arrow_double_right'} variant={this.variant}></inno-icon>\r\n        </button>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"]}