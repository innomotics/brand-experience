{"file":"inno-pane.js","mappings":";;;;;AAAA,MAAM,WAAW,GAAG,qwvDAAqwvD,CAAC;AAC1xvD,uBAAe,WAAW;;MCWbA,UAAQ;;;;;wBAMsD,OAAO;wBAKnC,KAAK;+BAKE,KAAK;;oCAUA,IAAI;wBAMjB,MAAM;2BAOnB,KAAK;;;;;;IAF3B,eAAe,CAAqC;IAI7D,gBAAgB,CAAC,KAAuB;QACtC,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QAExB,IAAI,IAAI,CAAC,oBAAoB,EAAE;YAC7B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;SACvB;KACF;IAEO,wBAAwB;QAC9B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;YACxB,QAAQ,EAAE,IAAI,CAAC,QAAQ;SACxB,CAAC,CAAC;KACJ;IAGD,gBAAgB;QACd,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,IAAI,IAAI,CAAC,QAAQ,KAAK,QAAQ,EAAE;YACzD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC;SAC/D;aAAM;YACL,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,CAAC;SACjE;KACF;IAEO,qBAAqB,CAAC,KAAa;QACzC,KAAK,CAAC;YACJ,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,yBAAyB,CAAC;YAClE,QAAQ,EAAE,GAAG;YACb,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,+BAA+B;YACvC,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE;gBACR,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBAExB,IAAI,CAAC,wBAAwB,EAAE,CAAC;aACjC;SACF,CAAC,CAAC;KACJ;IAEO,mBAAmB,CAAC,MAAc;QACxC,KAAK,CAAC;YACJ,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,yBAAyB,CAAC;YAClE,QAAQ,EAAE,GAAG;YACb,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,+BAA+B;YACvC,KAAK,EAAE,CAAC;YACR,QAAQ,EAAE;gBACR,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;gBAExB,IAAI,CAAC,wBAAwB,EAAE,CAAC;aACjC;SACF,CAAC,CAAC;KACJ;IAED,MAAM;QACJ,QACE,EAAC,IAAI,qDAAC,KAAK,EAAE;gBACX,aAAa,EAAE,CAAC,IAAI,CAAC,QAAQ;aAC9B,IACC,4DAAK,KAAK,EAAC,eAAe,EAAC,OAAO,EAAE,CAAC,CAAC,KAAK,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAQ,EAC3E,4DAAK,KAAK,EAAE;gBACV,wBAAwB,EAAE,IAAI;gBAC9B,cAAc,EAAE,IAAI,CAAC,QAAQ,KAAK,KAAK;gBACvC,eAAe,EAAE,IAAI,CAAC,QAAQ,KAAK,MAAM;gBACzC,iBAAiB,EAAE,IAAI,CAAC,QAAQ,KAAK,QAAQ;gBAC7C,gBAAgB,EAAE,IAAI,CAAC,QAAQ,KAAK,OAAO;aAC5C,IAEC,4DAAK,KAAK,EAAE;gBACV,sBAAsB,EAAE,IAAI;gBAC5B,UAAU,EAAE,IAAI,CAAC,SAAS,IAAI,IAAI;aACnC,EACC,MAAM,EAAE,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,QAAQ,IAC1C,IAAI,CAAC,SAAS,IAAI,IAAI,GAAG,cAAK,IAAI,CAAC,SAAS,CAAM,GAAG,IAAI,EACzD,CAAC,IAAI,CAAC,eAAe;cAClB,mBAAa,EAAE,EAAC,eAAe,EAAC,IAAI,EAAC,OAAO,EAAC,OAAO,EAAC,UAAU,EAAC,QAAQ,EAAE,IAAI,EAAE,YAAY,EAAC,OAAO,EACpG,OAAO,EAAE,MAAM,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,GAAgB;cAC7D,IAAI,CACJ,EACN,4DAAK,MAAM,EAAE,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,QAAQ,IAC9C,8DAAa,CACT,CACF,CACD,EACP;KACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["InnoPane"],"sources":["src/components/inno-pane/inno-pane.scss?tag=inno-pane&encapsulation=scoped","src/components/inno-pane/inno-pane.tsx"],"sourcesContent":["@use '@innomotics/brand-experience/styles/base';\r\n@use '@innomotics/brand-experience/styles/colors';\r\n\r\n:host {\r\n  display: block;\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  [hidden] {\r\n    display: none;\r\n    visibility: hidden;\r\n  }\r\n\r\n  &.not-visible {\r\n    display: none;\r\n    visibility: hidden;\r\n\r\n    .pane-content-container {\r\n      &.pane-pos-top,\r\n      &.pane-pos-bottom {\r\n        height: 0 !important;\r\n      }\r\n\r\n      &.pane-pos-right,\r\n      &.pane-pos-left {\r\n        width: 0 !important;\r\n      }\r\n    }\r\n  }\r\n\r\n  .pane-backdrop {\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background: colors.$backdrop;\r\n    backdrop-filter: blur(4px);\r\n    -webkit-backdrop-filter: blur(4px);\r\n    z-index: 1000;\r\n  }\r\n\r\n  .pane-content-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: fixed;\r\n    z-index: 1001;\r\n    background-color: colors.$primary-200;\r\n    padding: 15px;\r\n    font-weight: bold;\r\n    color: colors.$primary-300;\r\n\r\n    .pane-title-container {\r\n      display: flex;\r\n      flex-direction: row;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n\r\n      &.no-title {\r\n        justify-content: flex-end;\r\n      }\r\n    }\r\n\r\n    &.pane-pos-top,\r\n    &.pane-pos-bottom {\r\n      width: 100vw;\r\n      left: 0;\r\n    }\r\n\r\n    &.pane-pos-right,\r\n    &.pane-pos-left {\r\n      height: 100vh;\r\n      top: 0;\r\n    }\r\n\r\n    &.pane-pos-right {\r\n      right: 0;\r\n    }\r\n\r\n    &.pane-pos-left {\r\n      left: 0;\r\n    }\r\n\r\n    &.pane-pos-top {\r\n      top: 0;\r\n    }\r\n\r\n    &.pane-pos-bottom {\r\n      bottom: 0;\r\n    }\r\n  }\r\n}\r\n","import { Component, Element, Event, EventEmitter, Host, Prop, State, Watch, h } from '@stencil/core';\r\nimport anime from 'animejs';\r\n\r\nexport type ExpandedChangedEvent = {\r\n  expanded: boolean;\r\n};\r\n\r\n@Component({\r\n  tag: 'inno-pane',\r\n  styleUrl: 'inno-pane.scss',\r\n  scoped: true,\r\n})\r\nexport class InnoPane {\r\n  @Element() hostElement: HTMLInnoPaneElement;\r\n\r\n  /**\r\n   * Position of the pane.\r\n   */\r\n  @Prop({ mutable: true }) position: 'top' | 'left' | 'bottom' | 'right' = 'right';\r\n\r\n  /**\r\n   * Programatically control whether the pane is opened or closed.\r\n   */\r\n  @Prop({ mutable: true }) expanded: boolean = false;\r\n\r\n  /**\r\n   * The pane comes with a close button by default. Hide it with this property.\r\n   */\r\n  @Prop({ mutable: true }) hideCloseButton: boolean = false;\r\n\r\n  /**\r\n   * Title of the pane.\r\n   */\r\n  @Prop({ mutable: true }) titleText: string;\r\n\r\n  /**\r\n   * Whether the pane is closeable by clicking outside of it.\r\n   */\r\n  @Prop({ mutable: true }) closeOnBackdropClick: boolean = true;\r\n\r\n  /**\r\n   * Size of the pane. It is a width value in case of 'left' and 'right' position, and a height value in case of 'top' and 'bottom' position. \r\n   * All css units are supported which are supported by width and height css properties.\r\n   */\r\n  @Prop({ mutable: true }) paneSize: string = '100%';\r\n\r\n  /**\r\n   * This event is fired when the pane is opened or closed.\r\n   */\r\n  @Event() expandedChanged: EventEmitter<ExpandedChangedEvent>;\r\n\r\n  @State() private showContent = false;\r\n\r\n  closeViaBackdrop(event: globalThis.Event): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    if (this.closeOnBackdropClick) {\r\n      this.expanded = false;\r\n    }\r\n  }\r\n\r\n  private emitExpandedChangedEvent(): void {\r\n    this.expandedChanged.emit({\r\n      expanded: this.expanded\r\n    });\r\n  }\r\n\r\n  @Watch('expanded')\r\n  onExpandedChange() {\r\n    this.showContent = false;\r\n    if (this.position === 'top' || this.position === 'bottom') {\r\n      this.animateVerticalPane(this.expanded ? this.paneSize : '0');\r\n    } else {\r\n      this.animateHorizontalPane(this.expanded ? this.paneSize : '0');\r\n    }\r\n  }\r\n\r\n  private animateHorizontalPane(width: string) {\r\n    anime({\r\n      targets: this.hostElement.querySelector(\".pane-content-container\"),\r\n      duration: 300,\r\n      width: width,\r\n      easing: 'cubicBezier(0.84, 0, 0.58, 1)',\r\n      delay: 0,\r\n      complete: () => {\r\n        this.showContent = true;\r\n\r\n        this.emitExpandedChangedEvent();\r\n      }\r\n    });\r\n  }\r\n\r\n  private animateVerticalPane(height: string) {\r\n    anime({\r\n      targets: this.hostElement.querySelector(\".pane-content-container\"),\r\n      duration: 300,\r\n      height: height,\r\n      easing: 'cubicBezier(0.84, 0, 0.58, 1)',\r\n      delay: 0,\r\n      complete: () => {\r\n        this.showContent = true;\r\n\r\n        this.emitExpandedChangedEvent();\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host class={{\r\n        'not-visible': !this.expanded\r\n      }}>\r\n        <div class='pane-backdrop' onClick={(e) => this.closeViaBackdrop(e)}></div>\r\n        <div class={{\r\n          'pane-content-container': true,\r\n          'pane-pos-top': this.position === 'top',\r\n          'pane-pos-left': this.position === 'left',\r\n          'pane-pos-bottom': this.position === 'bottom',\r\n          'pane-pos-right': this.position === 'right'\r\n        }}\r\n        >\r\n          <div class={{\r\n            'pane-title-container': true,\r\n            'no-title': this.titleText == null\r\n          }}\r\n            hidden={!this.showContent || !this.expanded}>\r\n            {this.titleText != null ? <h2>{this.titleText}</h2> : null}\r\n            {!this.hideCloseButton\r\n              ? <inno-button id='innoPaneClose' icon='close' variant='tertiary' iconOnly={true} colorVariant='light'\r\n                onClick={() => this.expanded = !this.expanded}></inno-button>\r\n              : null}\r\n          </div>\r\n          <div hidden={!this.showContent || !this.expanded}>\r\n            <slot></slot>\r\n          </div>\r\n        </div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}\r\n"],"version":3}