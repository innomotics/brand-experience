{"file":"inno-paginator.js","mappings":"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","names":["InnoPaginator"],"sources":["src/components/inno-paginator/inno-paginator.scss?tag=inno-paginator&encapsulation=scoped","src/components/inno-paginator/inno-paginator.tsx"],"sourcesContent":["@use '@innomotics/brand-experience/styles/componentmixins';\r\n@use '@innomotics/brand-experience/styles/colors';\r\n\r\n:host {\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: nowrap;\r\n  gap: 8px;\r\n  align-items: center;\r\n  justify-items: center;\r\n  height:32px;\r\n\r\n  button{\r\n    font-family: 'InnomoticsHafferSQ';\r\n    font-size: 16px;\r\n    font-weight: 430;\r\n    border: none;\r\n    width:32px;\r\n    height:32px;\r\n    background-color: rgba(0,0,0,0);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor:pointer;\r\n    color:colors.$interaction-light-default;\r\n    \r\n    &.dark{\r\n      color: colors.$interaction-dark-default;\r\n      &:hover{\r\n        color:colors.$text-dark-buttonlabel;\r\n        background-color: colors.$interaction-dark-hover;\r\n      }\r\n      &.selected{\r\n        background-color: colors.$highlight-dark-100;\r\n        color:colors.$text-dark-buttonlabel;\r\n      }\r\n    }\r\n\r\n    &:focus:not(.disabled):not(:disabled) {\r\n      @include componentmixins.focus;\r\n    }\r\n\r\n    &.selected{\r\n      background-color: colors.$highlight-light-100;\r\n      color:colors.$text-light-buttonlabel;\r\n    }\r\n\r\n    &:hover{\r\n      background-color: colors.$interaction-light-hover;\r\n      color:colors.$text-light-buttonlabel;\r\n    }\r\n  }\r\n  \r\n  .page-buttons {\r\n    align-self:center;\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: nowrap;\r\n    gap: 8px;\r\n  }\r\n}\r\n","import { Event, Element, Component, Host, h, Prop, EventEmitter } from '@stencil/core';\r\n\r\n@Component({\r\n  tag: 'inno-paginator',\r\n  styleUrl: 'inno-paginator.scss',\r\n  scoped: true,\r\n})\r\nexport class InnoPaginator {\r\n  private readonly maxCountPages = 8;\r\n\r\n  @Element() hostElement!: HTMLInnoPaginatorElement;\r\n\r\n  @Prop({ mutable: true }) variant: 'dark' | 'light' = 'light';\r\n\r\n  /**\r\n   * Total number of pages\r\n   */\r\n  @Prop({ mutable: true }) pageCount: number;\r\n\r\n  /**\r\n   * One based index of currently selected page\r\n   */\r\n  @Prop({ mutable: true }) selectedPage = 1;\r\n\r\n  /**\r\n   * Page selection event\r\n   */\r\n  @Event() pageSelected: EventEmitter<number>;\r\n\r\n  /**\r\n   * Item count change event\r\n   */\r\n  @Event() itemCountChanged: EventEmitter<number>;\r\n\r\n  private selectPage(index: number) {\r\n    if (index < 1) {\r\n      this.selectedPage = 1;\r\n    } else if (index > this.pageCount) {\r\n      this.selectedPage = this.pageCount;\r\n    } else {\r\n      this.selectedPage = index;\r\n    }\r\n\r\n    this.pageSelected.emit(this.selectedPage);\r\n  }\r\n\r\n  private next() {\r\n    if (this.selectedPage !== this.pageCount) {\r\n      this.selectPage(this.selectedPage + 1);\r\n    }\r\n  }\r\n\r\n  private prev() {\r\n    if (this.selectedPage !== 1) {\r\n      this.selectPage(this.selectedPage - 1);\r\n    }\r\n  }\r\n\r\n  private first() {\r\n    if (this.selectedPage !== 1) {\r\n      this.selectPage(1);\r\n    }\r\n  }\r\n\r\n  private last() {\r\n    if (this.selectedPage !== this.pageCount) {\r\n      this.selectPage(this.pageCount);\r\n    }\r\n  }\r\n\r\n  private getPageButton(index: number) {\r\n    return <button class={{ selected: this.selectedPage == index, light: this.variant == 'light', dark: this.variant == 'dark' }} onClick={() => this.selectPage(index)}>{index}</button>;\r\n  }\r\n\r\n  private renderPageButtons() {\r\n    const pagesBeforeOverflow = Math.floor(this.maxCountPages / 2);\r\n    const hasOverflow = this.pageCount > this.maxCountPages;\r\n    const hasOverflowStart = hasOverflow && this.selectedPage > pagesBeforeOverflow;\r\n    const hasOverflowEnd = hasOverflow && this.selectedPage <= this.pageCount - pagesBeforeOverflow;\r\n    const pageButtons = [];\r\n\r\n    let start = 1;\r\n    let end = Math.min(this.pageCount, this.maxCountPages);\r\n    let pageCount = Math.floor((this.maxCountPages - 4) / 2);\r\n\r\n    if (hasOverflowStart) {\r\n      const baseButtonProps = {\r\n        onClick: () => {\r\n          if (hasOverflowEnd) {\r\n            this.selectPage(this.selectedPage - Math.max(0, 2 * pageCount + 1));\r\n          } else {\r\n            this.selectPage(this.pageCount - this.maxCountPages);\r\n          }\r\n        }\r\n      };\r\n      pageButtons.push(<button class={{ light: this.variant == 'light', dark: this.variant == 'dark' }} {...baseButtonProps}>...</button>);\r\n\r\n      if (hasOverflowEnd) {\r\n        start = this.pageCount - this.maxCountPages + 2;\r\n      } else {\r\n        start = this.pageCount - this.maxCountPages + 3;\r\n        end = this.pageCount;\r\n      }\r\n    }\r\n\r\n    if (hasOverflowEnd) {\r\n      if (hasOverflowStart) {\r\n        start = this.selectedPage - pageCount;\r\n        end = this.selectedPage + pageCount;\r\n      } else {\r\n        end = this.maxCountPages - 2;\r\n      }\r\n    }\r\n\r\n    for (let i = start; i <= end; i++) {\r\n      pageButtons.push(this.getPageButton(i));\r\n    }\r\n\r\n    if (hasOverflowEnd) {\r\n      const baseButtonProps = {\r\n        onClick: () => {\r\n          if (hasOverflowStart) {\r\n            this.selectPage(this.selectedPage + Math.max(0, 2 * pageCount + 1));\r\n          } else {\r\n            this.selectPage(this.maxCountPages - 1);\r\n          }\r\n        }\r\n      };\r\n      pageButtons.push(<button class={{ light: this.variant == 'light', dark: this.variant == 'dark' }} {...baseButtonProps}>...</button>);\r\n    }\r\n\r\n    return <span class=\"page-buttons\">{pageButtons}</span>;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <button disabled={this.selectedPage === 0} class={{ light: this.variant == 'light', dark: this.variant == 'dark' }} onClick={() => this.first()}>\r\n          <inno-icon size={32} icon={'arrow_double_left'} variant={this.variant}></inno-icon>\r\n        </button>\r\n        <button disabled={this.selectedPage === 0} class={{ light: this.variant == 'light', dark: this.variant == 'dark' }} onClick={() => this.prev()}>\r\n          <inno-icon size={32} icon={'arrowhead_left'} variant={this.variant}></inno-icon>\r\n        </button>\r\n        <span class=\"basic-pagination\">{this.renderPageButtons()} </span>\r\n        <button disabled={this.selectedPage === this.pageCount} class={{ light: this.variant == 'light', dark: this.variant == 'dark' }} onClick={() => this.next()}>\r\n          <inno-icon size={32} icon={'arrowhead_right'} variant={this.variant}></inno-icon>\r\n        </button>\r\n        <button disabled={this.selectedPage === this.pageCount} class={{ light: this.variant == 'light', dark: this.variant == 'dark' }} onClick={() => this.last()}>\r\n          <inno-icon size={32} icon={'arrow_double_right'} variant={this.variant}></inno-icon>\r\n        </button>\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}