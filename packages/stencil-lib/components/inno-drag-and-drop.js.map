{"file":"inno-drag-and-drop.js","mappings":"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","names":["InnoDragAndDrop"],"sources":["src/components/inno-drag-and-drop/inno-drag-and-drop.scss?tag=inno-drag-and-drop&encapsulation=scoped","src/components/inno-drag-and-drop/inno-drag-and-drop.tsx"],"sourcesContent":["@use '@innomotics/brand-experience/styles/colors';\r\n@use '@innomotics/brand-experience/styles/base';\r\n\r\n:host {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  min-width: 300px;\r\n  width: 100%;\r\n  max-height: 261px;\r\n\r\n  .file-upload-area {\r\n    cursor: pointer;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    min-height: 226px;\r\n    max-height: 226px;\r\n    height: 226px;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    width: 100%;\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n    background-color: transparent;\r\n    border: 2px dashed colors.$secondary-400;\r\n\r\n    .drag-text {\r\n      display: none;\r\n      font-size: 14px;\r\n      font-weight: 790;\r\n      line-height: 21.7px;\r\n      height: 63px;\r\n      width: 140px;\r\n      text-align: center;\r\n    }\r\n\r\n    &:not(.disabled).file-over {\r\n      &.dark {\r\n        border-color: colors.$primary-200;\r\n        background-color: colors.$transparency-light-100;\r\n      }\r\n\r\n      &.light {\r\n        border-color: colors.$primary-100;\r\n        background-color: colors.$transparency-dark-100;\r\n      }\r\n\r\n      .drag-text:not(.hidden) {\r\n        display: block;\r\n      }\r\n\r\n      .state .drag-and-drop-texts:not(.show-always) {\r\n        display: none;\r\n      }\r\n    }\r\n\r\n    &.checking,\r\n    &.success {\r\n      border-style: solid;\r\n      cursor: default;\r\n      pointer-events: none;\r\n\r\n      .state {\r\n        justify-content: center;\r\n      }\r\n    }\r\n\r\n    &.disabled {\r\n      pointer-events: none;\r\n      cursor: default;\r\n      border-style: solid;\r\n\r\n      &.dark {\r\n        background-color: colors.$transparency-light-100;\r\n\r\n        .state {\r\n          color: colors.$secondary-200;\r\n        }\r\n      }\r\n\r\n      &.light {\r\n        background-color: colors.$transparency-dark-100;\r\n\r\n        .state {\r\n          color: colors.$secondary-800;\r\n        }\r\n      }\r\n\r\n      .state {\r\n        justify-content: center;\r\n      }\r\n    }\r\n\r\n    .upload-browser {\r\n      border: 0;\r\n      clip: rect(0 0 0 0);\r\n      height: 1px;\r\n      margin: -1px;\r\n      overflow: hidden;\r\n      padding: 0;\r\n      position: absolute;\r\n      width: 1px;\r\n    }\r\n\r\n    &.dark {\r\n      .state {\r\n        color: colors.$secondary-800;\r\n\r\n        span.second-line-text {\r\n          color: colors.$primary-200;\r\n        }\r\n\r\n        .file-types-text {\r\n          color: colors.$secondary-800;\r\n        }\r\n\r\n        .drag-text {\r\n          color: colors.$secondary-800;\r\n        }\r\n      }\r\n    }\r\n\r\n    &.light {\r\n      .state {\r\n        color: colors.$secondary-300;\r\n\r\n        span.second-line-text {\r\n          color: colors.$primary-300;\r\n        }\r\n\r\n        .file-types-text {\r\n          color: colors.$secondary-300;\r\n        }\r\n\r\n        .drag-text {\r\n          color: colors.$secondary-300;\r\n        }\r\n      }\r\n    }\r\n\r\n    .state {\r\n      display: flex;\r\n      flex-direction: column;\r\n      align-items: center;\r\n      height: 162px;\r\n      gap: 16px;\r\n\r\n      .drag-and-drop-texts {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        height: 63px;\r\n\r\n        span {\r\n          display: block;\r\n\r\n          &.first-line-text,\r\n          &.second-line-text {\r\n            font-size: 14px;\r\n            font-weight: 790;\r\n            line-height: 21.7px;\r\n          }\r\n\r\n          &.or-text {\r\n            font-size: 12px;\r\n            font-weight: 430;\r\n            line-height: 18.6px;\r\n          }\r\n\r\n          &.second-line-text {\r\n            text-decoration: underline;\r\n          }\r\n        }\r\n      }\r\n\r\n      .file-types-text {\r\n        font-size: 12px;\r\n        font-weight: 430;\r\n        line-height: 18.6px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .error-text {\r\n    display: block;\r\n    font-size: 12px;\r\n    line-height: 18.6px;\r\n    margin-top: 16px;\r\n\r\n    &.dark {\r\n      color: colors.$error-200;\r\n    }\r\n\r\n    &.light {\r\n      color: colors.$error-100;\r\n    }\r\n  }\r\n}","import { Component, Element, Event, EventEmitter, Host, Method, Prop, State, h } from '@stencil/core';\r\nimport { DragAndDropTexts } from './drag-and-drop-texts';\r\n\r\n@Component({\r\n  tag: 'inno-drag-and-drop',\r\n  styleUrl: 'inno-drag-and-drop.scss',\r\n  scoped: true,\r\n})\r\nexport class InnoDragAndDrop {\r\n\r\n  /**\r\n   * Color variant of the component.\r\n   */\r\n  @Prop() variant: 'dark' | 'light' = 'dark';\r\n\r\n  /**\r\n   * The accept attribute specifies the types of files that the server accepts (that can be submitted through a file upload).\r\n   * \"https://www.w3schools.com/tags/att_input_accept.asp\"\r\n   */\r\n  @Prop() accept: string;\r\n\r\n  /**\r\n   * If multiple is true the user can drop or select multiple files\r\n   */\r\n  @Prop() multiple: boolean = false;\r\n\r\n  /**\r\n   * Disable all input events\r\n   */\r\n  @Prop({ mutable: true }) disabled: boolean = false;\r\n\r\n  /**\r\n   * After a file is uploaded you can set the upload component to a defined state\r\n   */\r\n  @Prop({ mutable: true }) state: 'SELECT_FILE' | 'LOADING' | 'UPLOAD_FAILED' | 'UPLOAD_SUCCESS' = 'SELECT_FILE';\r\n\r\n  /**\r\n   * 'firstLineText' and 'secondLineText': will be used by state = 'SELECT_FILE',\r\n   * <br/><br/>'orText': The word 'or' or its equivalent translation. Hidden if only 'firstLineText' or only 'secondLineText' is used,\r\n   * <br/><br/>'dragText': displayed when file is dragged over the component, can be omitted,\r\n   * <br/><br/>'loadingText': will be used by state = 'LOADING',\r\n   * <br/><br/>'uploadFailedText': will be used by state = 'UPLOAD_FAILED',\r\n   * <br/><br/>'uploadSuccessText': will be used by state = 'UPLOAD_SUCCESS',\r\n   * <br/><br/>'acceptedFileTypesText': label for accepted file types,\r\n   * <br/><br/>'uploadDisabledText': label for disabled state\r\n   */\r\n  @Prop({ mutable: true }) texts: DragAndDropTexts = {\r\n    firstLineText: null,\r\n    secondLineText: null,\r\n    orText: null,\r\n    dragText: null,\r\n    loadingText: null,\r\n    uploadFailedText: null,\r\n    uploadSuccessText: null,\r\n    acceptedFileTypesText: null,\r\n    uploadDisabledText: null\r\n  };\r\n\r\n  @Event() filesChanged: EventEmitter<Array<File>>;\r\n\r\n  @Element() hostElement!: HTMLInnoDragAndDropElement;\r\n\r\n  @State() isFileOver = false;\r\n\r\n  private filesToUpload: Array<File>;\r\n\r\n  get inputElement(): HTMLInputElement {\r\n    return this.hostElement.querySelector('#upload-browser');\r\n  }\r\n\r\n  private fileDropped(evt: DragEvent) {\r\n    evt.preventDefault();\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    const file: File | FileList = evt.dataTransfer.files;\r\n    this.isFileOver = false;\r\n\r\n    this.filesToUpload = this.convertToFileArray(file);\r\n    this.filesChanged.emit(this.filesToUpload);\r\n  }\r\n\r\n  private fileOver(event: DragEvent) {\r\n    if (this.state !== 'LOADING') {\r\n      event.preventDefault();\r\n      event.dataTransfer.dropEffect = 'move';\r\n    }\r\n\r\n    if (!this.multiple && event.dataTransfer.items.length > 1) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      event.dataTransfer.effectAllowed = 'none';\r\n      event.dataTransfer.dropEffect = 'none';\r\n    } else {\r\n      this.isFileOver = true;\r\n    }\r\n  }\r\n\r\n  private fileLeave() {\r\n    this.isFileOver = false;\r\n  }\r\n\r\n  private fileChangeEvent(event: any) {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n    this.filesToUpload = this.convertToFileArray(event.target.files);\r\n\r\n    this.filesChanged.emit(this.filesToUpload);\r\n\r\n    // Workaround for bug in native input element, that prevents the user from uploading\r\n    // a file with the same name as the most recent one, but with changed content.\r\n    this.inputElement.type = '';\r\n    this.inputElement.type = 'file';\r\n  }\r\n\r\n  private convertToFileArray(filesFromEvent: FileList | File): File[] {\r\n    let files = [];\r\n    if (filesFromEvent instanceof FileList) {\r\n      files = Array.from(filesFromEvent);\r\n    } else {\r\n      files = [filesFromEvent];\r\n    }\r\n    return files;\r\n  }\r\n\r\n  @Method()\r\n  async setFilesToUpload(obj: any) {\r\n    this.filesToUpload = obj;\r\n  }\r\n\r\n  private renderBasic() {\r\n    let renderFirstLine: boolean = this.texts.firstLineText != null && this.texts.firstLineText.replace(/\\s/g, '').length > 0;\r\n    let renderSecondLine: boolean = this.texts.secondLineText != null && this.texts.secondLineText.replace(/\\s/g, '').length > 0;\r\n    let renderOr: boolean = renderFirstLine && renderSecondLine;\r\n    let renderFileTypesText: boolean = this.texts.acceptedFileTypesText != null && this.texts.acceptedFileTypesText.replace(/\\s/g, '').length > 0;\r\n    let ignoreDragText: boolean = this.texts.dragText == null || this.texts.dragText.replace(/\\s/g, '').length === 0\r\n\r\n    return (\r\n      <div class=\"state\">\r\n        <inno-icon icon='upload' size={48}></inno-icon>\r\n        <div class={{ \"drag-and-drop-texts\": true, \"show-always\": ignoreDragText }}>\r\n          {renderFirstLine ? <span class=\"first-line-text\">{this.texts.firstLineText}</span> : null}\r\n          {renderOr ? <span class=\"or-text\">{this.texts.orText}</span> : null}\r\n          {renderSecondLine ? <span class=\"second-line-text\">{this.texts.secondLineText}</span> : null}\r\n        </div>\r\n        <div class={{ \"drag-text\": true, hidden: ignoreDragText }}>{this.texts.dragText}</div>\r\n        {renderFileTypesText ? <span class=\"file-types-text\">{this.texts.acceptedFileTypesText}</span> : null}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderDisabled() {\r\n    return (\r\n      <div class=\"state\">\r\n        <inno-icon icon='close' size={48}></inno-icon>\r\n        <span class=\"disabled-text\">{this.texts.uploadDisabledText}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderLoading() {\r\n    return (\r\n      <div class=\"state\">\r\n        <inno-loader size={48} variant={this.variant === 'dark' ? 'light' : 'dark'}></inno-loader>\r\n        <span class=\"loading-text\">{this.texts.loadingText}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderSuccess() {\r\n    return (\r\n      <div class=\"state\">\r\n        <inno-icon icon='check_checkbox' size={48}></inno-icon>\r\n        <span class=\"loading-text\">{this.texts.uploadSuccessText}</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderUploadState() {\r\n    if (this.disabled) {\r\n      return this.renderDisabled();\r\n    }\r\n\r\n    switch (this.state) {\r\n      case 'LOADING':\r\n        return this.renderLoading();\r\n      case 'UPLOAD_SUCCESS':\r\n        return this.renderSuccess();\r\n      case 'SELECT_FILE':\r\n      case 'UPLOAD_FAILED':\r\n      default:\r\n        return this.renderBasic();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        <div\r\n          class={{\r\n            'file-upload-area': true,\r\n            'file-over':\r\n              this.state !== 'LOADING' && this.isFileOver,\r\n            checking: this.state === 'LOADING',\r\n            success: this.state === 'UPLOAD_SUCCESS',\r\n            disabled: this.disabled,\r\n            dark: this.variant === 'dark',\r\n            light: this.variant === 'light'\r\n          }}\r\n          onDrop={(e) => {\r\n            if (this.state !== 'LOADING') {\r\n              this.fileDropped(e);\r\n            }\r\n          }}\r\n          onDragOver={(e) => this.fileOver(e)}\r\n          onDragLeave={() => this.fileLeave()}\r\n          draggable={!this.disabled}\r\n          onClick={() => this.inputElement.click()}\r\n        >\r\n          {this.renderUploadState()}\r\n          <div>\r\n            <input\r\n              multiple={this.multiple}\r\n              type=\"file\"\r\n              class=\"upload-browser\"\r\n              id=\"upload-browser\"\r\n              onChange={(e) => {\r\n                this.fileChangeEvent(e);\r\n              }}\r\n              accept={this.accept}\r\n            />\r\n          </div>\r\n        </div>\r\n        {this.state === 'UPLOAD_FAILED'\r\n          ? <span class={{ \"error-text\": true, dark: this.variant === 'dark', light: this.variant === 'light' }}>{this.texts.uploadFailedText}</span> : null}\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}\r\n"],"version":3}