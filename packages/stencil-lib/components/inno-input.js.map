{"file":"inno-input.js","mappings":"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","names":["InnoInput"],"sources":["src/components/inno-input/inno-input.scss?tag=inno-input&encapsulation=scoped","src/components/inno-input/inno-input.tsx"],"sourcesContent":["@use '@innomotics/brand-experience/styles/colors';\r\n@use '@innomotics/brand-experience/styles/componentmixins';\r\n\r\n@mixin light-base {\r\n  background-color: colors.$background-light-200;\r\n  color: colors.$text-light-lowemphasis;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n}\r\n\r\n@mixin dark-base {\r\n  background-color: colors.$background-dark-200;\r\n  color: colors.$text-dark-lowemphasis;\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n}\r\n\r\n:host {\r\n  display: block;\r\n  height: 56px;\r\n  min-height: 56px;\r\n  max-height: 56px;\r\n  padding: 0px 16px 0px 16px;\r\n  margin: 5px 5px 8px 5px;\r\n  border: 1px solid colors.$additional-light-300;\r\n  cursor: text;\r\n  position: relative;\r\n\r\n  &.textareamode {\r\n    height: 100%;\r\n    max-height: unset;\r\n    margin: 0;\r\n    padding: 16px 5px 20px 16px;\r\n\r\n    position: relative;\r\n    pointer-events: all;\r\n    user-select: none;\r\n  }\r\n\r\n  &.can-show-errors {\r\n    margin-bottom: 23px;\r\n  }\r\n\r\n  &.light {\r\n    @include light-base;\r\n\r\n    &:hover:not(.disabled):not(:disabled) {\r\n      border: 1px solid colors.$interaction-light-hover;\r\n      box-shadow: inset 0px 0px 0px 1px colors.$interaction-light-hover;\r\n    }\r\n\r\n    &.isactive {\r\n      &:hover:not(.disabled):not(:disabled) {\r\n        box-shadow: inset 0px 0px 0px 1px colors.$highlight-light-100;\r\n        border: 1px solid colors.$highlight-light-100;\r\n      }\r\n\r\n      border: 1px solid colors.$highlight-light-100;\r\n      box-shadow: inset 0px 0px 0px 1px colors.$highlight-light-100;\r\n\r\n      &.disabled,\r\n      &:disabled {\r\n        box-shadow: inset 0px 0px 0px 1px colors.$additional-light-300;\r\n        border: 1px solid colors.$additional-light-300;\r\n        background-color: colors.$transparency-light-100;\r\n      }\r\n    }\r\n\r\n    &.focused {\r\n      @include componentmixins.focus;\r\n    }\r\n\r\n    &.invalid {\r\n      box-shadow: inset 0px 0px 0px 1px colors.$status-light-error;\r\n      border: 1px solid colors.$status-light-error;\r\n    }\r\n\r\n    &.disabled {\r\n      background-color: colors.$transparency-light-200;\r\n      border: 1px solid transparent;\r\n    }\r\n  }\r\n\r\n  &.dark {\r\n    @include dark-base;\r\n\r\n    &:hover:not(.disabled):not(:disabled) {\r\n      box-shadow: inset 0px 0px 0px 1px colors.$interaction-dark-hover;\r\n    }\r\n\r\n    &.disabled {\r\n      background-color: colors.$transparency-dark-100;\r\n      border: 1px solid transparent;\r\n    }\r\n\r\n    &.isactive {\r\n      &:hover:not(.disabled):not(:disabled) {\r\n        box-shadow: inset 0px 0px 0px 1px colors.$additional-dark-300;\r\n        border: 1px solid colors.$additional-dark-300;\r\n      }\r\n\r\n      border: 1px solid colors.$highlight-dark-100;\r\n      box-shadow: inset 0px 0px 0px 1px colors.$highlight-dark-100;\r\n\r\n      &.disabled,\r\n      &:disabled {\r\n        box-shadow: inset 0px 0px 0px 1px colors.$additional-dark-300;\r\n        border: 1px solid colors.$additional-dark-300;\r\n      }\r\n    }\r\n\r\n    &.focused {\r\n      @include componentmixins.focus;\r\n    }\r\n\r\n    &.invalid {\r\n      box-shadow: inset 0px 0px 0px 1px colors.$status-dark-error;\r\n      border: 1px solid colors.$status-dark-error;\r\n    }\r\n  }\r\n\r\n  ::slotted(input) {\r\n    width: 100%;\r\n    border: none;\r\n    outline: none;\r\n    margin-top: calc(56px - 30px);\r\n  }\r\n\r\n  .label {\r\n    left: auto;\r\n    right: auto;\r\n    z-index: 1;\r\n    pointer-events: none;\r\n    transition: 0.2s cubic-bezier(0.84, 0, 0.58, 1) all;\r\n    transform: translate(0rem, 1.2rem) scale(1);\r\n    position: absolute;\r\n    white-space: nowrap;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n\r\n    &.light {\r\n      &.invalid {\r\n        color: colors.$status-light-error;\r\n      }\r\n\r\n      &.disabled {\r\n        color: colors.$text-light-lowemphasis;\r\n      }\r\n    }\r\n\r\n    &.dark {\r\n      &.invalid {\r\n        color: colors.$status-dark-error;\r\n      }\r\n\r\n      &.disabled {\r\n        color: colors.$text-dark-lowemphasis;\r\n      }\r\n    }\r\n\r\n    &.float {\r\n      transform: translate(0rem, 0.5rem) scale(1);\r\n      font-size: 12px;\r\n    }\r\n\r\n    &.textareamode {\r\n      transform: translate(0rem, -0.2rem) scale(1);\r\n\r\n      &.floatarea {\r\n        transform: translate(0rem, -0.9rem) scale(1);\r\n        font-size: 12px;\r\n      }\r\n    }\r\n  }\r\n\r\n  &.disabled {\r\n    border: 1px solid colors.$interaction-light-disabled;\r\n  }\r\n}\r\n\r\n.seizer {\r\n  position: absolute;\r\n  bottom: -17px;\r\n  right: -15px;\r\n\r\n  z-index: 1;\r\n\r\n  &.seizer-horizontal {\r\n    cursor: ew-resize;\r\n  }\r\n\r\n  &.seizer-vertical {\r\n    cursor: ns-resize;\r\n  }\r\n\r\n  &.seizer-both {\r\n    cursor: nw-resize;\r\n  }\r\n\r\n  &.seizer-with-scrollbar {\r\n    // Currently seizer is not moved, implemented for further usage\r\n  }\r\n}","import { Element, Listen, Event, Prop, Component, Host, h, EventEmitter, State } from '@stencil/core';\r\nimport sanitizeHtml from 'sanitize-html';\r\n\r\n@Component({\r\n  tag: 'inno-input',\r\n  styleUrl: 'inno-input.scss',\r\n  scoped: true,\r\n  formAssociated: true,\r\n})\r\nexport class InnoInput {\r\n  @Element() hostElement!: HTMLInnoInputElement & HTMLDivElement;\r\n  private inputElementRef?: HTMLInputElement;\r\n  private seizerElementRef: HTMLElement;\r\n  private mutationObserver: MutationObserver;\r\n  private resizeObserver: ResizeObserver;\r\n\r\n  /**\r\n   * Fired when the new value is valid.\r\n   */\r\n  @Event() valueChanged: EventEmitter<string | number>;\r\n\r\n  @State() isActive: boolean;\r\n\r\n  @State() shouldFloat: boolean;\r\n\r\n  @State() textareaMode = false;\r\n\r\n  /**\r\n   * Whether the input is focused or not.\r\n   */\r\n  @Prop({ mutable: true }) isFocused: boolean;\r\n\r\n  /**\r\n   * Whether the inno-input component is disabled or not. Probably not needed to be set since the component\r\n   * automatically detects if the inserted input element is disabled or not.\r\n   * The inno-input component will also be in a disabled state when the input element is readonly.\r\n   */\r\n  @Prop({ reflect: true, mutable: true }) disabled: boolean = false;\r\n\r\n  /**\r\n   * Floating label for the input.\r\n   */\r\n  @Prop({ mutable: true }) label: string;\r\n\r\n  /**\r\n   * Color variant of the input.\r\n   */\r\n  @Prop({ mutable: true }) variant: 'light' | 'dark' = 'light';\r\n\r\n  /**\r\n   * Error message to show. If you don't want to use this property you can manually add 'inno-error' components inside the 'inno-input' component.\r\n   * You can either use this property or use the manually added errors. Can't use both at the same time.\r\n   */\r\n  @Prop({ mutable: true }) error: string;\r\n\r\n  /**\r\n   * The input's validation error type, see: https://developer.mozilla.org/en-US/docs/Web/API/ValidityState\r\n   * <br/><br/>Only has an effect if 'error' has a value.\r\n   */\r\n  @Prop({ mutable: true }) errortype:\r\n    | 'badInput'\r\n    | 'customError'\r\n    | 'patternMismatch'\r\n    | 'rangeOverflow'\r\n    | 'rangeUnderflow'\r\n    | 'stepMismatch'\r\n    | 'tooLong'\r\n    | 'tooShort'\r\n    | 'typeMismatch'\r\n    | 'valid'\r\n    | 'valueMissing'\r\n    | undefined;\r\n\r\n  /** @internal */ //for now this stays as non public, if it causes some issues for someone, they can disable it\r\n  @Prop() valuePropReDefine: boolean = true;\r\n\r\n  /**\r\n   * When you click on the inno-input a focus() command is called on the input element.\r\n   * This might cause that the caret position will be at the beginnging of the input's value.\r\n   * Set this to true if you want to select all of the text by default.\r\n   */\r\n  @Prop({ mutable: true }) selectOnFocus: boolean = false;\r\n\r\n  /**\r\n   * When you click on the inno-input a focus() command is called on the input element.\r\n   * This might cause that the caret position will be at the beginnging of the input's value.\r\n   * Set this to true if you want the caret position to be at the end. Only has an effect if the input type is 'text'.\r\n   * Has no effect if 'selectOnFocus' is also true.\r\n   */\r\n  @Prop({ mutable: true }) caretPosEndOnFocus: boolean = false;\r\n\r\n  /**\r\n   * Whether the textarea is resizeable.\r\n   * Only has effect if textarea is provided as wrapped element.\r\n   */\r\n  @Prop({ mutable: true }) resizeable = false;\r\n\r\n  /**\r\n   * Set the resize direction.\r\n   * Only has effect if textarea is provided as wrapped element.\r\n   */\r\n  @Prop({ mutable: true }) resizeMode: 'vertical' | 'horizontal' | 'both' = 'both';\r\n\r\n  /**\r\n   * The floating label is an absolutely positioned element meaning if it is too long it will grow out of the boundaries of the InnoInput component.\r\n   * By default the InnoInput component automatically resizes the floating label so it will fit inside.\r\n   * You can turn this behavior off e.g. if you are sure the label will always fit or it causes some issues.\r\n   */\r\n  @Prop({ mutable: true }) disableFloatingLabelAutoResize: boolean = false;\r\n\r\n  @State() isValid: boolean = true;\r\n\r\n  private floatingLabel: HTMLSpanElement;\r\n  private resizeTimeout: any;\r\n\r\n  get errorElements() {\r\n    return [...Array.from(this.hostElement.querySelectorAll('inno-error:not(.explicit-error)'))] as HTMLInnoErrorElement[];\r\n  }\r\n\r\n  @Listen('input')\r\n  inputChanged(event) {\r\n    this.shouldFloat = true;\r\n    this.isActive = true;\r\n    this.setErrors(event.target);\r\n    this.synchSeizerPosition();\r\n  }\r\n\r\n  private setErrors(element: any) {\r\n    if (this.error != null && this.error !== '') {\r\n      //if error is specified skip the manually added errors\r\n      return;\r\n    }\r\n\r\n    this.errorElements.forEach(ee => (ee.active = false));\r\n    if (!element.validity.valid) {\r\n      this.isValid = false;\r\n      //set everything off;\r\n\r\n      let property: keyof typeof element.validity; // Type is 'foo' | 'bar'\r\n\r\n      for (property in element.validity) {\r\n        if (element.validity[property]) {\r\n          let definedErrorElement = this.errorElements.find(ee => ee.type == property);\r\n          if (definedErrorElement) {\r\n            definedErrorElement.active = true;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      this.isValid = true;\r\n    }\r\n\r\n    if (this.isValid) {\r\n      this.valueChanged.emit(this.value);\r\n    }\r\n  }\r\n\r\n  private isValueEmpty(): boolean {\r\n    return this.value === '' || this.value === undefined || this.value === null;\r\n  }\r\n\r\n  private get value(): any {\r\n    return this.inputElementRef?.value;\r\n  }\r\n\r\n  private setFloatingLabelMaxWidth(): void {\r\n    if (this.disableFloatingLabelAutoResize) {\r\n      return;\r\n    }\r\n\r\n    clearTimeout(this.resizeTimeout);\r\n    this.resizeTimeout = setTimeout(() => {\r\n      if (!this.floatingLabel || !this.hostElement) {\r\n        return;\r\n      }\r\n\r\n      this.floatingLabel.style.maxWidth = `${this.hostElement.getBoundingClientRect().width - 20}px`;\r\n    }, 200);\r\n  }\r\n\r\n  //when we programatically change the input's value (e.g. with Angular's formControl's setValue(...)), no events are generated\r\n  //we redefine the input value setter, so an event will be fired besides the original setter function\r\n  //if we disable this then we have to manually send input events to the input\r\n  private reDefineInputValueProperty(): void {\r\n    if (!this.inputElementRef || !this.valuePropReDefine) {\r\n      return;\r\n    }\r\n\r\n    let elementPrototype = Object.getPrototypeOf(this.inputElementRef);\r\n    let descriptor = Object.getOwnPropertyDescriptor(elementPrototype, 'value');\r\n    let thisref = this;\r\n    Object.defineProperty(this.inputElementRef, 'value', {\r\n      get: function () {\r\n        return descriptor.get.apply(this, arguments);\r\n      },\r\n      set: function () {\r\n        descriptor.set.apply(this, arguments);\r\n        setTimeout(() => thisref.hostElement.dispatchEvent(new globalThis.Event('reCheckInnoInputValue', { bubbles: true })), 0);\r\n      },\r\n    });\r\n  }\r\n\r\n  private startMutationObserver(): void {\r\n    if (!!this.inputElementRef) {\r\n      this.mutationObserver = new MutationObserver((mutations: MutationRecord[]) => {\r\n        let isDisabled: boolean = false;\r\n        let isReadOnly: boolean = false;\r\n\r\n        for (var i = 0, mutation: MutationRecord; (mutation = mutations[i]); i++) {\r\n          if (mutation.attributeName == 'disabled') {\r\n            isDisabled = (mutation.target as HTMLInputElement).disabled;\r\n          } else if (mutation.attributeName == 'readonly') {\r\n            isReadOnly = (mutation.target as HTMLInputElement).readOnly;\r\n          }\r\n        }\r\n\r\n        this.disabled = isDisabled || isReadOnly;\r\n      });\r\n\r\n      this.mutationObserver.observe(this.inputElementRef, { attributes: true });\r\n    }\r\n  }\r\n\r\n  private startResizeObserver(): void {\r\n    if (!this.hostElement) {\r\n      return;\r\n    }\r\n    this.resizeObserver = new ResizeObserver(() => {\r\n      this.setFloatingLabelMaxWidth();\r\n    });\r\n\r\n    this.resizeObserver.observe(this.hostElement, { box: \"border-box\" });\r\n  }\r\n\r\n  componentDidLoad() {\r\n    this.inputElementRef = this.hostElement.querySelector('input') ?? (this.hostElement.querySelector('textarea') as any);\r\n    this.textareaMode = this.inputElementRef instanceof HTMLTextAreaElement;\r\n\r\n    this.reDefineInputValueProperty();\r\n    this.startMutationObserver();\r\n    this.startResizeObserver();\r\n\r\n    setTimeout(() => {\r\n      if (!this.isValueEmpty()) {\r\n        this.shouldFloat = true;\r\n      }\r\n\r\n      this.disabled = this.inputElementRef?.disabled || this.inputElementRef?.readOnly;\r\n    });\r\n\r\n    this.errorElements.forEach(ee => ee.classList.add(this.variant));\r\n    this.synchSeizerPosition();\r\n    this.setFloatingLabelMaxWidth();\r\n\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.mutationObserver?.disconnect();\r\n    this.mutationObserver = null;\r\n    this.resizeObserver?.disconnect();\r\n    this.resizeObserver = null;\r\n  }\r\n\r\n  @Listen('reCheckInnoInputValue')\r\n  reCheckValue() {\r\n    this.setErrors(this.inputElementRef);\r\n    this.shouldFloat = !this.isValueEmpty();\r\n  }\r\n\r\n  @Listen('focusin')\r\n  onFocus() {\r\n    this.shouldFloat = true;\r\n    this.isActive = true;\r\n    this.isFocused = true;\r\n  }\r\n\r\n  @Listen('focusout')\r\n  onFocusout() {\r\n    if (this.isValueEmpty()) {\r\n      this.shouldFloat = false;\r\n    }\r\n    this.isActive = false;\r\n    this.isFocused = false;\r\n  }\r\n\r\n  activateInput() {\r\n    this.isActive = true;\r\n    this.inputElementRef.focus();\r\n\r\n    if (this.inputElementRef.value !== null && this.inputElementRef.value !== undefined && this.inputElementRef.value.length > 0) {\r\n      if (this.selectOnFocus) {\r\n        this.inputElementRef.select();\r\n        return;\r\n      }\r\n\r\n      if (this.caretPosEndOnFocus && this.inputElementRef.type == 'text') {\r\n        this.inputElementRef.selectionStart = this.inputElementRef.selectionEnd = this.inputElementRef.value.length;\r\n      }\r\n    }\r\n  }\r\n\r\n  private synchSeizerPosition() {\r\n    if (!this.seizerElementRef) {\r\n      return;\r\n    }\r\n\r\n    if (this.inputElementRef.scrollHeight > this.inputElementRef.clientHeight) {\r\n      this.seizerElementRef.classList.add('seizer-with-scrollbar');\r\n    } else {\r\n      this.seizerElementRef.classList.remove('seizer-with-scrollbar');\r\n    }\r\n  }\r\n\r\n  private onSeizerMouseDown(_event: MouseEvent) {\r\n    const seizerMove = (event: MouseEvent) => this.onSeizerMove(event);\r\n\r\n    const mouseUpListener = () => {\r\n      window.removeEventListener('mousemove', seizerMove);\r\n      window.removeEventListener('mouseup', mouseUpListener);\r\n      this.inputElementRef.removeEventListener('mouseup', mouseUpListener);\r\n    };\r\n\r\n    window.addEventListener('mouseup', mouseUpListener);\r\n    this.inputElementRef.addEventListener('mouseup', mouseUpListener);\r\n    window.addEventListener('mousemove', seizerMove);\r\n  }\r\n\r\n  private onSeizerMove(event: MouseEvent) {\r\n    if (this.resizeMode === 'both' || this.resizeMode === 'horizontal') {\r\n      const width = event.clientX < 100 ? 100 : event.clientX;\r\n      this.hostElement.style.width = `${width}px`;\r\n    }\r\n\r\n    if (this.resizeMode === 'both' || this.resizeMode === 'vertical') {\r\n      const height = event.clientY < 100 ? 100 : event.clientY;\r\n      this.hostElement.style.height = `${height}px`;\r\n    }\r\n\r\n    this.synchSeizerPosition();\r\n  }\r\n\r\n  private seizerElement() {\r\n    const classes = {\r\n      'seizer': true,\r\n      'seizer-horizontal': this.resizeMode === 'horizontal',\r\n      'seizer-vertical': this.resizeMode === 'vertical',\r\n      'seizer-both': this.resizeMode === 'both',\r\n    };\r\n\r\n    if (this.resizeable) {\r\n      return <inno-icon icon=\"resize\" size={32} class={classes} ref={ref => (this.seizerElementRef = ref)} onMouseDown={event => this.onSeizerMouseDown(event)}></inno-icon>;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  private errorElement() {\r\n    const errorSpecified = this.error != null && this.error !== '';\r\n\r\n    if (errorSpecified) {\r\n      return (\r\n        <inno-error class=\"explicit-error\" type={this.errortype} variant={this.variant} active={true}>\r\n          {this.error}\r\n        </inno-error>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let errorSpecified = this.error != null && this.error !== '';\r\n    let canShowErrors = this.errorElements?.length > 0 || errorSpecified;\r\n    let shouldDisable = this.disabled || this.inputElementRef?.disabled || this.inputElementRef?.readOnly;\r\n    this.setFloatingLabelMaxWidth();\r\n\r\n    return (\r\n      <Host\r\n        class={{\r\n          'input-container': true,\r\n          'isactive': this.isActive,\r\n          'focused': this.isFocused,\r\n          'light': this.variant === 'light',\r\n          'dark': this.variant === 'dark',\r\n          'disabled': shouldDisable,\r\n          'invalid': !this.isValid || errorSpecified,\r\n          'can-show-errors': canShowErrors,\r\n          'textareamode': this.textareaMode,\r\n        }}\r\n        onClick={() => this.activateInput()}\r\n      >\r\n        <span\r\n          class={{\r\n            label: true,\r\n            float: this.shouldFloat && !this.textareaMode,\r\n            floatarea: this.shouldFloat && this.textareaMode,\r\n            disabled: shouldDisable,\r\n            light: this.variant === 'light',\r\n            dark: this.variant === 'dark',\r\n            invalid: !this.isValid || errorSpecified,\r\n            textareamode: this.textareaMode,\r\n          }}\r\n          ref={el => this.floatingLabel = el}\r\n          innerHTML={sanitizeHtml(this.label)}\r\n        ></span>\r\n        <slot></slot>\r\n        {this.seizerElement()}\r\n        {this.errorElement()}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}