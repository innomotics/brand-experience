{"file":"inno-checkbox.js","mappings":"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","names":["InnoCheckbox"],"sources":["src/components/inno-checkbox/inno-checkbox.scss?tag=inno-checkbox&encapsulation=scoped","src/components/inno-checkbox/inno-checkbox.tsx"],"sourcesContent":["@use '@innomotics/brand-experience/styles/colors';\r\n\r\n$checkbox-size: 20px;\r\n$border-size: 1px;\r\n\r\n@mixin checkmark-base {\r\n  width: 5px;\r\n  height: 3px;\r\n  display: block;\r\n  position: absolute;\r\n  border-top: none;\r\n  border-right: none;\r\n  border-bottom-width: 0.0825rem;\r\n  border-bottom-style: solid;\r\n  border-left-width: 0.0825rem;\r\n  border-left-style: solid;\r\n  transform: translate(0px, -1px) rotate(-53deg) scale(2) skew(-8deg, -3deg);\r\n}\r\n\r\n:host {\r\n  height: 25px;\r\n  display: inline-flex;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  font-weight: 300;\r\n  font-style: normal;\r\n\r\n  // Remove focus default style\r\n  outline-width: 0;\r\n\r\n  input {\r\n    border: 0;\r\n    clip: rect(0 0 0 0);\r\n    height: 1px;\r\n    margin: -1px;\r\n    overflow: hidden;\r\n    padding: 0;\r\n    position: absolute;\r\n    width: 1px;\r\n  }\r\n\r\n  input {\r\n    border: 0;\r\n    clip: rect(0 0 0 0);\r\n    height: 1px;\r\n    margin: -1px;\r\n    overflow: hidden;\r\n    padding: 0;\r\n    position: absolute;\r\n    width: 1px;\r\n  }\r\n}\r\n\r\n.checkbox {\r\n  width: $checkbox-size;\r\n  height: $checkbox-size;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n\r\n  &.focus {\r\n    transition: outline 300ms cubic-bezier(0.84, 0, 0.58, 1);\r\n    outline: $border-size solid colors.$focus-100;\r\n    outline-offset: 2px;\r\n  }\r\n\r\n  &.light {\r\n    background-color: colors.$primary-300;\r\n    border: $border-size solid colors.$primary-200;\r\n  }\r\n\r\n  &.dark {\r\n    background-color: colors.$primary-200;\r\n    border: $border-size solid colors.$primary-300;\r\n  }\r\n\r\n  &:hover {\r\n    &.light {\r\n      background-color: colors.$primary-300;\r\n      border: $border-size solid colors.$secondary-600;\r\n    }\r\n\r\n    &.dark {\r\n      background-color: colors.$primary-200;\r\n      border: $border-size solid colors.$secondary-400;\r\n    }\r\n  }\r\n\r\n  &:active {\r\n    &.light {\r\n      background-color: colors.$primary-300;\r\n      border: $border-size solid colors.$secondary-600;\r\n    }\r\n\r\n    &.dark {\r\n      background-color: colors.$primary-200;\r\n      border: $border-size solid colors.$secondary-400;\r\n    }\r\n  }\r\n\r\n  &.error {\r\n    &.light {\r\n      background-color: colors.$primary-300;\r\n      border: $border-size solid colors.$error-200;\r\n    }\r\n\r\n    &.dark {\r\n      background-color: colors.$primary-200;\r\n      border: $border-size solid colors.$error-100;\r\n    }\r\n  }\r\n\r\n  &.readonly {\r\n    cursor: default;\r\n\r\n    &.light {\r\n      background-color: colors.$primary-300;\r\n      border: 1px solid colors.$secondary-400;\r\n    }\r\n\r\n    &.dark {\r\n      background-color: colors.$primary-200;\r\n      border: $border-size solid colors.$secondary-300;\r\n    }\r\n  }\r\n\r\n  &.disabled {\r\n    cursor: default;\r\n\r\n    &.light {\r\n      background-color: colors.$secondary-200;\r\n      border: 1px solid colors.$secondary-200;\r\n    }\r\n\r\n    &.dark {\r\n      background-color: colors.$secondary-800;\r\n      border: $border-size solid colors.$secondary-800;\r\n    }\r\n  }\r\n\r\n  &.checked {\r\n    &.light {\r\n      background-color: colors.$primary-200;\r\n      border: $border-size solid colors.$primary-200;\r\n    }\r\n\r\n    &.dark {\r\n      background-color: colors.$primary-100;\r\n      border: $border-size solid colors.$primary-200;\r\n    }\r\n\r\n    &:hover {\r\n      &.light {\r\n        background-color: colors.$secondary-600;\r\n        border: $border-size solid colors.$secondary-600;\r\n      }\r\n\r\n      &.dark {\r\n        background-color: colors.$secondary-300;\r\n        border: $border-size solid colors.$secondary-300;\r\n      }\r\n    }\r\n\r\n    &.error {\r\n      &.light {\r\n        background-color: colors.$primary-200;\r\n        border: $border-size solid colors.$primary-200;\r\n      }\r\n\r\n      &.dark {\r\n        background-color: colors.$primary-100;\r\n        border: $border-size solid colors.$primary-100;\r\n      }\r\n    }\r\n\r\n    &:active {\r\n      &.light {\r\n        background-color: colors.$secondary-600;\r\n        border: $border-size solid colors.$secondary-600;\r\n      }\r\n\r\n      &.dark {\r\n        background-color: colors.$secondary-400;\r\n        border: $border-size solid colors.$secondary-400;\r\n      }\r\n    }\r\n\r\n    &.readonly {\r\n      cursor: default;\r\n\r\n      &.light {\r\n        background-color: colors.$primary-300;\r\n        border: $border-size solid colors.$primary-300;\r\n      }\r\n\r\n      &.dark {\r\n        background-color: colors.$primary-200;\r\n        border: $border-size solid colors.$primary-200;\r\n      }\r\n    }\r\n\r\n    &.disabled {\r\n      cursor: default;\r\n\r\n      &.light {\r\n        background-color: colors.$secondary-200;\r\n        border: $border-size solid colors.$secondary-200;\r\n      }\r\n\r\n      &.dark {\r\n        background-color: colors.$secondary-800;\r\n        border: $border-size solid colors.$secondary-800;\r\n      }\r\n    }\r\n  }\r\n\r\n  &.indeterminate {\r\n    &.light {\r\n      background-color: colors.$primary-200;\r\n      border: 1px solid colors.$primary-200;\r\n    }\r\n\r\n    &.dark {\r\n      background-color: colors.$primary-100;\r\n      border: $border-size solid colors.$primary-200;\r\n    }\r\n\r\n    &:hover {\r\n      &.light {\r\n        background-color: colors.$secondary-600;\r\n        border: $border-size solid colors.$secondary-600;\r\n      }\r\n\r\n      &.dark {\r\n        background-color: colors.$secondary-300;\r\n        border: $border-size solid colors.$secondary-300;\r\n      }\r\n    }\r\n\r\n    &.error {\r\n      &.light {\r\n        background-color: colors.$primary-200;\r\n        border: $border-size solid colors.$primary-200;\r\n      }\r\n\r\n      &.dark {\r\n        background-color: colors.$primary-100;\r\n        border: $border-size solid colors.$primary-100;\r\n      }\r\n    }\r\n\r\n    &:active {\r\n      &.light {\r\n        background-color: colors.$secondary-600;\r\n        border: $border-size solid colors.$secondary-600;\r\n      }\r\n\r\n      &.dark {\r\n        background-color: colors.$secondary-400;\r\n        border: $border-size solid colors.$secondary-400;\r\n      }\r\n    }\r\n\r\n    &.readonly {\r\n      cursor: default;\r\n\r\n      &.light {\r\n        background-color: colors.$primary-300;\r\n        border: $border-size solid colors.$primary-300;\r\n      }\r\n\r\n      &.dark {\r\n        background-color: colors.$primary-200;\r\n        border: $border-size solid colors.$primary-200;\r\n      }\r\n    }\r\n\r\n    &.disabled {\r\n      cursor: default;\r\n\r\n      &.light {\r\n        background-color: colors.$secondary-200;\r\n        border: $border-size solid colors.$secondary-200;\r\n      }\r\n\r\n      &.dark {\r\n        background-color: colors.$secondary-800;\r\n        border: $border-size solid colors.$secondary-800;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.checksign {\r\n  display: none;\r\n\r\n  &.checked {\r\n    @include checkmark-base;\r\n    display: unset;\r\n\r\n    &.light {\r\n      border-bottom-color: colors.$primary-300;\r\n      border-left-color: colors.$primary-300;\r\n    }\r\n\r\n    &.dark {\r\n      border-bottom-color: colors.$primary-200;\r\n      border-left-color: colors.$primary-200;\r\n    }\r\n\r\n    &:hover {\r\n      &.light {\r\n        border-bottom-color: colors.$primary-300;\r\n        border-left-color: colors.$primary-300;\r\n      }\r\n\r\n      &.dark {\r\n        border-bottom-color: colors.$primary-200;\r\n        border-left-color: colors.$primary-200;\r\n      }\r\n    }\r\n\r\n    &:active {\r\n      &.light {\r\n        border-bottom-color: colors.$primary-300;\r\n        border-left-color: colors.$primary-300;\r\n      }\r\n\r\n      &.dark {\r\n        border-bottom-color: colors.$primary-200;\r\n        border-left-color: colors.$primary-200;\r\n      }\r\n    }\r\n\r\n    &.readonly {\r\n      cursor: default;\r\n\r\n      &.light {\r\n        border-bottom-color: colors.$primary-200;\r\n        border-left-color: colors.$primary-200;\r\n      }\r\n\r\n      &.dark {\r\n        border-bottom-color: colors.$primary-300;\r\n        border-left-color: colors.$primary-300;\r\n      }\r\n    }\r\n\r\n    &.error {\r\n      &.light {\r\n        border-bottom-color: colors.$primary-300;\r\n        border-left-color: colors.$primary-300;\r\n      }\r\n\r\n      &.dark {\r\n        border-bottom-color: colors.$primary-200;\r\n        border-left-color: colors.$primary-200;\r\n      }\r\n    }\r\n\r\n    &.disabled {\r\n      cursor: default;\r\n\r\n      &.light {\r\n        border-bottom-color: colors.$secondary-400;\r\n        border-left-color: colors.$secondary-400;\r\n      }\r\n\r\n      &.dark {\r\n        border-bottom-color: colors.$secondary-400;\r\n        border-left-color: colors.$secondary-400;\r\n      }\r\n    }\r\n  }\r\n\r\n  &.indeterminate {\r\n    display: block;\r\n    width: 10px;\r\n    height: 2px;\r\n    border: none;\r\n    position: absolute;\r\n    transform: none;\r\n\r\n    &.light {\r\n      background-color: colors.$primary-300;\r\n    }\r\n\r\n    &.dark {\r\n      background-color: colors.$primary-200;\r\n    }\r\n\r\n    &:hover {\r\n      &.light {\r\n        background-color: colors.$primary-300;\r\n      }\r\n\r\n      &.dark {\r\n        background-color: colors.$primary-200;\r\n      }\r\n    }\r\n\r\n    &:active {\r\n      &.light {\r\n        background-color: colors.$primary-300;\r\n      }\r\n\r\n      &.dark {\r\n        background-color: colors.$primary-200;\r\n      }\r\n    }\r\n\r\n    &.readonly {\r\n      cursor: default;\r\n\r\n      &.light {\r\n        background-color: colors.$primary-200;\r\n      }\r\n\r\n      &.dark {\r\n        background-color: colors.$primary-300;\r\n      }\r\n    }\r\n\r\n    &.error {\r\n      &.light {\r\n        background-color: colors.$primary-300;\r\n      }\r\n\r\n      &.dark {\r\n        background-color: colors.$primary-200;\r\n      }\r\n    }\r\n\r\n    &.disabled {\r\n      cursor: default;\r\n\r\n      &.light {\r\n        background-color: colors.$secondary-400;\r\n      }\r\n\r\n      &.dark {\r\n        background-color: colors.$secondary-400;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.label {\r\n  font-size: 16px;\r\n  cursor: pointer;\r\n  margin-left: 8px;\r\n\r\n  &.light {\r\n    color: colors.$primary-200;\r\n  }\r\n\r\n  &.dark {\r\n    color: colors.$primary-300;\r\n  }\r\n\r\n  &.required {\r\n    &::after {\r\n      content: '*';\r\n    }\r\n  }\r\n\r\n  &.error {\r\n    &.light {\r\n      color: colors.$error-200;\r\n    }\r\n\r\n    &.dark {\r\n      color: colors.$error-100;\r\n    }\r\n  }\r\n\r\n  &.readonly {\r\n    cursor: default;\r\n\r\n    &.light {\r\n      color: colors.$primary-200;\r\n    }\r\n\r\n    &.dark {\r\n      color: colors.$primary-300;\r\n    }\r\n  }\r\n\r\n  &.disabled {\r\n    cursor: default;\r\n\r\n    &.light {\r\n      color: colors.$secondary-400;\r\n    }\r\n\r\n    &.dark {\r\n      color: colors.$secondary-400;\r\n    }\r\n  }\r\n\r\n  &.checked {\r\n    &.error {\r\n      &.light {\r\n        color: colors.$primary-200;\r\n      }\r\n\r\n      &.dark {\r\n        color: colors.$primary-300;\r\n      }\r\n    }\r\n  }\r\n\r\n  &.indeterminate {\r\n    &.readonly {\r\n      &.light {\r\n        color: colors.$primary-200;\r\n      }\r\n\r\n      &.dark {\r\n        color: colors.$primary-300;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, Host, Prop, h, Event, EventEmitter, Element, Listen, State, AttachInternals } from '@stencil/core';\r\nimport { a11yBoolean } from '../../utils/a11y';\r\nimport { isNotPresent } from '../../utils/utils';\r\n\r\n/**\r\n * Checkbox for Innomatics design system.\r\n */\r\n@Component({\r\n  tag: 'inno-checkbox',\r\n  styleUrl: 'inno-checkbox.scss',\r\n  scoped: true,\r\n  formAssociated: true,\r\n})\r\nexport class InnoCheckbox {\r\n  @Element()\r\n  hostElement: HTMLElement;\r\n\r\n  @AttachInternals()\r\n  elementInternals: ElementInternals;\r\n\r\n  @State()\r\n  isFocused = false;\r\n\r\n  /**\r\n   * Theme variant of the component.\r\n   */\r\n  @Prop({ mutable: true })\r\n  variant: 'dark' | 'light' = 'light';\r\n\r\n  /**\r\n   * The tab index.\r\n   */\r\n  @Prop({ mutable: true })\r\n  tabIdx: number = 0;\r\n\r\n  /**\r\n   * Form entry name.\r\n   */\r\n  @Prop()\r\n  name: string;\r\n\r\n  /**\r\n   * Label to show.\r\n   */\r\n  @Prop()\r\n  label = '';\r\n\r\n  /**\r\n   * Whether element is checked.\r\n   */\r\n  @Prop({ mutable: true, reflect: true })\r\n  checked: boolean | undefined;\r\n\r\n  /**\r\n   * Whether indeterminate state is enabled for the component.\r\n   * The component is in indeterminate state if\r\n   * it is explicity requested\r\n   * and the checked status is not defined\r\n   */\r\n  @Prop()\r\n  indeterminate: boolean = false;\r\n\r\n  /**\r\n   * Whether component is disabled.\r\n   * In this state no other state effects are applied to the element like error.\r\n   */\r\n  @Prop({ mutable: true, reflect: true })\r\n  disabled = false;\r\n\r\n  /**\r\n   * Whether the component is readonly.\r\n   * In this state no other state effects are applied to the element like error.\r\n   */\r\n  @Prop({ mutable: true, reflect: true })\r\n  readonly = false;\r\n\r\n  /**\r\n   * Mark the component as required and show the required marker.\r\n   * Validation is performed with this property.\r\n   */\r\n  @Prop({ mutable: true, reflect: true })\r\n  required = false;\r\n\r\n  /**\r\n   * Whether the element is in error state.\r\n   * Error state can be defined if manual error handling is required.\r\n   */\r\n  @Prop()\r\n  error = false;\r\n\r\n  /**\r\n   * Checked status has been changed.\r\n   */\r\n  @Event()\r\n  valueChange: EventEmitter<boolean>;\r\n\r\n  formDisabledCallback(disabled: boolean) {\r\n    this.disabled = disabled;\r\n  }\r\n\r\n  @Listen('focusin')\r\n  onFocus() {\r\n    if (this.elementInDisabledInteractionMode()) {\r\n      this.isFocused = false;\r\n    } else {\r\n      this.isFocused = true;\r\n    }\r\n  }\r\n\r\n  @Listen('focusout')\r\n  onFocusOut() {\r\n    this.isFocused = false;\r\n  }\r\n\r\n  @Listen('keydown')\r\n  handleKeyDown(ev: KeyboardEvent) {\r\n    if (ev.key === 'Enter') {\r\n      this.changeCheckedState(!this.checked);\r\n    }\r\n  }\r\n\r\n  // Check whether the component cannot be interacted\r\n  // Like disabled or readonly modes.\r\n  elementInDisabledInteractionMode() {\r\n    return this.disabled || this.readonly;\r\n  }\r\n\r\n  changeCheckedState(newState: boolean) {\r\n    if (this.elementInDisabledInteractionMode()) {\r\n      return;\r\n    }\r\n\r\n    this.checked = newState;\r\n    this.valueChange.emit(this.checked);\r\n  }\r\n\r\n  checkRequiredState(): boolean {\r\n    if (this.elementInDisabledInteractionMode()) {\r\n      return false;\r\n    }\r\n\r\n    return this.required;\r\n  }\r\n\r\n  checkErrorState(): boolean {\r\n    if (this.elementInDisabledInteractionMode()) {\r\n      return false;\r\n    }\r\n\r\n    // No error state for checked state\r\n    // Only valid error state for now is the required and not checked case\r\n    // The error class interferes with the hover and active classes\r\n    if (this.checked || this.checkIndeterminateState()) {\r\n      return false;\r\n    }\r\n\r\n    if (this.error) {\r\n      return true;\r\n    }\r\n\r\n    return !this.elementInternals.validity.valid;\r\n  }\r\n\r\n  checkReadonlyState(): boolean {\r\n    return this.disabled ? false : this.readonly;\r\n  }\r\n\r\n  // Value is undefined (no exact value or interaction)\r\n  // and indeterminate is explicitly requested\r\n  checkIndeterminateState(): boolean {\r\n    return isNotPresent(this.checked) && this.indeterminate;\r\n  }\r\n\r\n  commonStyles() {\r\n    return {\r\n      light: this.variant === 'light',\r\n      dark: this.variant === 'dark',\r\n      checked: this.checked,\r\n      focus: this.isFocused,\r\n      disabled: this.disabled,\r\n      error: this.checkErrorState(),\r\n      readonly: this.checkReadonlyState(),\r\n      required: this.checkRequiredState(),\r\n      indeterminate: this.checkIndeterminateState(),\r\n    };\r\n  }\r\n\r\n  inputElement() {\r\n    return (\r\n      <input\r\n        type=\"checkbox\"\r\n        aria-checked={a11yBoolean(this.checked)}\r\n        tabIndex={-1}\r\n        name={this.name}\r\n        disabled={this.disabled}\r\n        checked={this.checked}\r\n        required={this.required}\r\n        onChange={event => this.changeCheckedState((event.target as any).checked)}\r\n      />\r\n    );\r\n  }\r\n\r\n  checkboxComponent() {\r\n    const classes = {\r\n      ...this.commonStyles(),\r\n      checkbox: true,\r\n    };\r\n\r\n    return (\r\n      <div class={classes} onClick={() => this.changeCheckedState(!this.checked)}>\r\n        {this.checkSignComponent()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  checkSignComponent() {\r\n    const classes = {\r\n      ...this.commonStyles(),\r\n      checksign: true,\r\n    };\r\n\r\n    return <div class={classes}></div>;\r\n  }\r\n\r\n  labelComponent() {\r\n    const classes = {\r\n      ...this.commonStyles(),\r\n      label: true,\r\n    };\r\n    if (this.label != null && this.label !== '') {\r\n      return (\r\n        <span class={classes} onClick={() => this.changeCheckedState(!this.checked)}>\r\n          {this.label}\r\n        </span>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const tabIndexValue = this.elementInDisabledInteractionMode() ? -1 : this.tabIdx;\r\n\r\n    return (\r\n      <Host tabIndex={tabIndexValue} role=\"checkbox\" aria-checked={a11yBoolean(this.checked)}>\r\n        {this.inputElement()}\r\n        {this.checkboxComponent()}\r\n        {this.labelComponent()}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"version":3}