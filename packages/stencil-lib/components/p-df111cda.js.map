{"file":"p-df111cda.js","mappings":"AAAA;;;;;;;;MAWa,WAAW,GAAG,CAAC,KAAc,MAAM,KAAK,GAAG,MAAM,GAAG,OAAO,EAAE;MA4C7D,kBAAkB,GAAG,CAChC,WAAwB,EACxB,mBAAwC,EAAE;IAE1C,MAAM,eAAe,GAAwB,EAAE,CAAC;IAChD,cAAc,CAAC,OAAO,CAAC,CAAC,IAAI;QAC1B,IAAI,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE;YAClC,MAAM,KAAK,GAAG,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YAC7C,IAAI,KAAK,KAAK,IAAI,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;gBACtD,eAAe,CAAC,IAAI,CAAC,GAAG,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gBACvD,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;aACnC;SACF;KACF,CAAC,CAAC;IAEH,OAAO,eAAe,CAAC;AACzB,EAAE;AA4DF,MAAM,cAAc,GAAwB;IAC1C,MAAM;IACN,uBAAuB;IACvB,aAAa;IACb,mBAAmB;IACnB,mBAAmB;IACnB,6BAA6B;IAC7B,WAAW;IACX,cAAc;IACd,eAAe;IACf,eAAe;IACf,mBAAmB;IACnB,cAAc;IACd,eAAe;IACf,cAAc;IACd,kBAAkB;IAClB,kBAAkB;IAClB,cAAc;IACd,eAAe;IACf,mBAAmB;IACnB,eAAe;IACf,aAAa;IACb,eAAe;IACf,aAAa;IACb,cAAc;IACd,mBAAmB;IACnB,YAAY;IACZ,iBAAiB;IACjB,YAAY;IACZ,WAAW;IACX,gBAAgB;IAChB,sBAAsB;IACtB,kBAAkB;IAClB,WAAW;IACX,kBAAkB;IAClB,eAAe;IACf,cAAc;IACd,eAAe;IACf,eAAe;IACf,eAAe;IACf,sBAAsB;IACtB,eAAe;IACf,eAAe;IACf,mBAAmB;IACnB,cAAc;IACd,eAAe;IACf,cAAc;IACd,WAAW;IACX,eAAe;IACf,eAAe;IACf,eAAe;IACf,gBAAgB;CACjB;;;;","names":[],"sources":["src/utils/a11y.ts"],"sourcesContent":["/*\r\n * SPDX-FileCopyrightText: 2024 Innomotics GmbH\r\n *\r\n * SPDX-License-Identifier: MIT\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nimport { isHttpUrl, isSvgDataUrl } from './condition-checks';\r\n\r\nexport const a11yBoolean = (value: boolean) => (value ? 'true' : 'false');\r\n\r\nconst kebabCaseToUpperCaseSentence = (kebabCase: string) => {\r\n  const withoutFilledSuffix = kebabCase.replace('-filled', '');\r\n  const words = withoutFilledSuffix.split('-');\r\n  const sentence = words\r\n    .map((word) => {\r\n      const trimWord = word.trim();\r\n      const digitLessWord = trimWord.replace(/\\d+/g, '');\r\n\r\n      if (digitLessWord.length === 0) {\r\n        return trimWord;\r\n      }\r\n\r\n      return digitLessWord;\r\n    })\r\n    .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n    .join(' ');\r\n\r\n  return sentence;\r\n};\r\n\r\nexport const getFallbackLabelFromIconName = (iconName: string) => {\r\n  if (!iconName) {\r\n    return 'Unknown';\r\n  }\r\n\r\n  if (isHttpUrl(iconName)) {\r\n    return 'Unknown';\r\n  }\r\n\r\n  if (isSvgDataUrl(iconName)) {\r\n    return 'Unknown';\r\n  }\r\n\r\n  const label = kebabCaseToUpperCaseSentence(iconName);\r\n\r\n  if (label.length === 0) {\r\n    return 'Unknown';\r\n  }\r\n\r\n  return label;\r\n};\r\n\r\nexport const a11yHostAttributes = (\r\n  hostElement: HTMLElement,\r\n  ignoreAttributes: A11yAttributeName[] = []\r\n): Record<A11yAttributeName, any> => {\r\n  const attributeObject: Record<string, any> = {};\r\n  a11yAttributes.forEach((attr) => {\r\n    if (hostElement.hasAttribute(attr)) {\r\n      const value = hostElement.getAttribute(attr);\r\n      if (value !== null && !ignoreAttributes.includes(attr)) {\r\n        attributeObject[attr] = hostElement.getAttribute(attr);\r\n        hostElement.removeAttribute(attr);\r\n      }\r\n    }\r\n  });\r\n\r\n  return attributeObject;\r\n};\r\n\r\ntype PartialRecord<K extends keyof any, T> = {\r\n  [P in K]?: T;\r\n};\r\nexport type A11yAttributes = PartialRecord<A11yAttributeName, any>;\r\n\r\nexport type A11yAttributeName =\r\n  | 'role'\r\n  | 'aria-activedescendant'\r\n  | 'aria-atomic'\r\n  | 'aria-autocomplete'\r\n  | 'aria-braillelabel'\r\n  | 'aria-brailleroledescription'\r\n  | 'aria-busy'\r\n  | 'aria-checked'\r\n  | 'aria-colcount'\r\n  | 'aria-colindex'\r\n  | 'aria-colindextext'\r\n  | 'aria-colspan'\r\n  | 'aria-controls'\r\n  | 'aria-current'\r\n  | 'aria-describedby'\r\n  | 'aria-description'\r\n  | 'aria-details'\r\n  | 'aria-disabled'\r\n  | 'aria-errormessage'\r\n  | 'aria-expanded'\r\n  | 'aria-flowto'\r\n  | 'aria-haspopup'\r\n  | 'aria-hidden'\r\n  | 'aria-invalid'\r\n  | 'aria-keyshortcuts'\r\n  | 'aria-label'\r\n  | 'aria-labelledby'\r\n  | 'aria-level'\r\n  | 'aria-live'\r\n  | 'aria-multiline'\r\n  | 'aria-multiselectable'\r\n  | 'aria-orientation'\r\n  | 'aria-owns'\r\n  | 'aria-placeholder'\r\n  | 'aria-posinset'\r\n  | 'aria-pressed'\r\n  | 'aria-readonly'\r\n  | 'aria-relevant'\r\n  | 'aria-required'\r\n  | 'aria-roledescription'\r\n  | 'aria-rowcount'\r\n  | 'aria-rowindex'\r\n  | 'aria-rowindextext'\r\n  | 'aria-rowspan'\r\n  | 'aria-selected'\r\n  | 'aria-setsize'\r\n  | 'aria-sort'\r\n  | 'aria-valuemax'\r\n  | 'aria-valuemin'\r\n  | 'aria-valuenow'\r\n  | 'aria-valuetext';\r\n\r\nconst a11yAttributes: A11yAttributeName[] = [\r\n  'role',\r\n  'aria-activedescendant',\r\n  'aria-atomic',\r\n  'aria-autocomplete',\r\n  'aria-braillelabel',\r\n  'aria-brailleroledescription',\r\n  'aria-busy',\r\n  'aria-checked',\r\n  'aria-colcount',\r\n  'aria-colindex',\r\n  'aria-colindextext',\r\n  'aria-colspan',\r\n  'aria-controls',\r\n  'aria-current',\r\n  'aria-describedby',\r\n  'aria-description',\r\n  'aria-details',\r\n  'aria-disabled',\r\n  'aria-errormessage',\r\n  'aria-expanded',\r\n  'aria-flowto',\r\n  'aria-haspopup',\r\n  'aria-hidden',\r\n  'aria-invalid',\r\n  'aria-keyshortcuts',\r\n  'aria-label',\r\n  'aria-labelledby',\r\n  'aria-level',\r\n  'aria-live',\r\n  'aria-multiline',\r\n  'aria-multiselectable',\r\n  'aria-orientation',\r\n  'aria-owns',\r\n  'aria-placeholder',\r\n  'aria-posinset',\r\n  'aria-pressed',\r\n  'aria-readonly',\r\n  'aria-relevant',\r\n  'aria-required',\r\n  'aria-roledescription',\r\n  'aria-rowcount',\r\n  'aria-rowindex',\r\n  'aria-rowindextext',\r\n  'aria-rowspan',\r\n  'aria-selected',\r\n  'aria-setsize',\r\n  'aria-sort',\r\n  'aria-valuemax',\r\n  'aria-valuemin',\r\n  'aria-valuenow',\r\n  'aria-valuetext'\r\n];\r\n"],"version":3}