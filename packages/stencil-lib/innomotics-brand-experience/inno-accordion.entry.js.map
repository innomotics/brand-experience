{"file":"inno-accordion.entry.esm.js","mappings":"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","names":["sanitizeHtml"],"sources":["src/components/inno-accordion/inno-accordion.scss?tag=inno-accordion&encapsulation=scoped","src/components/inno-accordion/inno-accordion.tsx"],"sourcesContent":["@use '@innomotics/brand-experience/styles/base';\r\n@use '@innomotics/brand-experience/styles/colors';\r\n@use '@innomotics/brand-experience/styles/componentmixins';\r\n\r\n:host {\r\n  display: flex;\r\n\r\n  a,\r\n  a:visited,\r\n  a.hovered {\r\n    &.light {\r\n      color: colors.$text-light-highemphasis;\r\n    }\r\n\r\n    &.dark {\r\n      color: colors.$text-dark-highemphasis;\r\n    }\r\n  }\r\n\r\n  .accordion {\r\n    text-decoration: none;\r\n    width: 100%;\r\n\r\n    &.last {\r\n      border-top: 1px solid colors.$additional-light-300;\r\n      border-bottom: 1px solid colors.$additional-light-300;\r\n    }\r\n\r\n    &.light {\r\n      border-top: 1px solid colors.$additional-light-300;\r\n      background-color: colors.$primary-300;\r\n\r\n      &.hovered {\r\n        background-color: colors.$secondary-100;\r\n        border-top: 1px solid colors.$transparency-light-200;\r\n      }\r\n\r\n      /*&:focus {\r\n        @include componentmixins.focus;\r\n      }*/\r\n\r\n      &.open.hovered {\r\n        background-color: colors.$secondary-100;\r\n      }\r\n\r\n      &.inner {\r\n        border: 0;\r\n        background-color: transparent;\r\n      }\r\n\r\n      &.inner.hovered {\r\n        background-color: colors.$secondary-100;\r\n      }\r\n    }\r\n\r\n    &.dark {\r\n      border-top: 1px solid colors.$additional-light-300;\r\n      background-color: colors.$primary-200;\r\n\r\n      &.hovered {\r\n        background-color: colors.$interaction-dark-hover;\r\n        border-top: 1px solid rgba(225, 240, 0, 1);\r\n      }\r\n\r\n      /*&:focus {\r\n        @include componentmixins.focus;\r\n      }*/\r\n\r\n      &.inner {\r\n        border: 0;\r\n      }\r\n\r\n      &.inner.hovered {\r\n        background-color: colors.$interaction-dark-hover;\r\n      }\r\n    }\r\n  }\r\n\r\n  .accordion-header {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding: 0px 24px 0px 24px;\r\n    min-height: 3rem;\r\n    height: 3rem;\r\n    pointer-events: all;\r\n    cursor: pointer;\r\n\r\n    &.inner {\r\n      padding: 0;\r\n      justify-content: flex-start;\r\n    }\r\n  }\r\n\r\n  .accordion-header-titles {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    gap: 8px;\r\n\r\n    .accordion-header-title {\r\n      display: flex;\r\n      align-items: center;\r\n      height: 100%;\r\n      max-width: fit-content;\r\n      font-weight: bold;\r\n      font-size: 16px;\r\n\r\n      &.second-label {\r\n        font-weight: 400;\r\n        margin-right: 8px;\r\n      }\r\n\r\n      &.light {\r\n        color: colors.$text-light-highemphasis;\r\n      }\r\n\r\n      &.dark {\r\n        color: colors.$text-dark-highemphasis;\r\n      }\r\n\r\n      &.inner {\r\n        font-weight: normal;\r\n        font-size: 12px;\r\n      }\r\n\r\n      &.hide {\r\n        display: none;\r\n        max-height: 0;\r\n        padding-top: 0px;\r\n        padding-bottom: 0px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .accordion-content {\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n    padding-bottom: 24px;\r\n    cursor: default;\r\n\r\n    &.light {\r\n      color: colors.$primary-200;\r\n    }\r\n\r\n    &.dark {\r\n      color: colors.$primary-300;\r\n    }\r\n\r\n    display: block;\r\n\r\n    &.inner {\r\n      padding-left: 24px;\r\n      padding-right: 24px;\r\n      padding-bottom: 24px;\r\n      font-weight: normal;\r\n      font-size: 12px;\r\n    }\r\n\r\n    &.hide {\r\n      display: none;\r\n      max-height: 0;\r\n      padding-top: 0px;\r\n      padding-bottom: 0px;\r\n    }\r\n  }\r\n}","import { Component, Element, Event, EventEmitter, h, Host, Prop } from '@stencil/core';\r\nimport sanitizeHtml from 'sanitize-html';\r\n\r\n@Component({\r\n  tag: 'inno-accordion',\r\n  styleUrl: 'inno-accordion.scss',\r\n  scoped: true\r\n})\r\nexport class InnoAccordion {\r\n  /**\r\n   * Color variant of the accordion.\r\n   */\r\n  @Prop({ mutable: true }) variant: 'light' | 'dark' = 'light';\r\n\r\n  /**\r\n   * You can programatically open/close the accordion with this property.\r\n   */\r\n  @Prop({ mutable: true }) collapsed = false;\r\n\r\n  /**\r\n   * Whether the accordion is the last in a group of accordions. Needed for styling.\r\n   */\r\n  @Prop({ mutable: true }) last = false;\r\n\r\n  /**\r\n   * Whether it is an accordion inside another accordion. Gives a different style then the main one.\r\n   */\r\n  @Prop({ mutable: true }) inner = false;\r\n\r\n  /**\r\n   * Text to display for the accordion. Always visible whether the accordion is opened or closed.\r\n   */\r\n  @Prop({ mutable: true }) label: string;\r\n\r\n  /**\r\n   * Secondary text for the accordion. Always visible whether the accordion is opened or closed.\r\n   */\r\n  @Prop({ mutable: true }) secondLabel: string;\r\n\r\n  /**\r\n   * This event is fired whenever the accordion is opened/closed via user interaction.\r\n   */\r\n  @Event() collapsedChanged: EventEmitter<{ element: HTMLInnoAccordionElement, collapsed: boolean }>;\r\n\r\n  @Element() hostElement!: HTMLInnoAccordionElement;\r\n\r\n  private anchorElementRef: HTMLAnchorElement;\r\n\r\n  private onHeaderClick() {\r\n    this.collapsed = !this.collapsed;\r\n    this.collapsedChanged.emit({ element: this.hostElement, collapsed: this.collapsed });\r\n  }\r\n\r\n  private toggleHoveredClass(hovered: boolean) {\r\n    if (hovered) {\r\n      this.anchorElementRef.classList.add(\"hovered\");\r\n      this.anchorElementRef.querySelectorAll(\"inno-accordion a.accordion\").forEach(accordion => {\r\n        accordion.classList.add(\"hovered\");\r\n      });\r\n    } else {\r\n      this.anchorElementRef.classList.remove(\"hovered\");\r\n      this.anchorElementRef.querySelectorAll(\"inno-accordion a.accordion\").forEach(accordion => {\r\n        accordion.classList.remove(\"hovered\");\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let iconSize: number = 24;\r\n    let icon: string = this.collapsed ? this.inner ? 'chevron_down_small' : 'plus' : this.inner ? 'chevron_up_small' : 'minus';\r\n    let headerTitle =\r\n      <div class=\"accordion-header-titles\">\r\n        <span class={{\r\n          'accordion-header-title': true,\r\n          'light': this.variant === 'light',\r\n          'dark': this.variant === 'dark',\r\n          'inner': this.inner\r\n        }} innerHTML={sanitizeHtml(this.label)}></span>\r\n        <span class={{\r\n          'accordion-header-title': true,\r\n          'second-label': true,\r\n          'light': this.variant === 'light',\r\n          'dark': this.variant === 'dark',\r\n          'inner': this.inner\r\n        }} innerHTML={sanitizeHtml(this.secondLabel)}></span>\r\n      </div>;\r\n\r\n    return (\r\n      <Host>\r\n        <a class={{\r\n          'accordion': true,\r\n          'light': this.variant === 'light',\r\n          'dark': this.variant === 'dark',\r\n          'last': this.last,\r\n          'open': !this.collapsed,\r\n          'inner': this.inner,\r\n        }}\r\n          ref={(ref) => (this.anchorElementRef = ref)}\r\n        >\r\n\r\n          <div class={{\r\n            'accordion-header': true,\r\n            'inner': this.inner,\r\n            'light': this.variant === 'light',\r\n            'dark': this.variant === 'dark',\r\n          }}\r\n            onClick={() => this.onHeaderClick()}\r\n            onMouseEnter={() => this.toggleHoveredClass(true)}\r\n            onMouseLeave={() => this.toggleHoveredClass(false)}\r\n          >\r\n\r\n            {!this.inner ? headerTitle : null}\r\n\r\n            <inno-icon class={{\r\n              'inner': this.inner,\r\n            }} icon={icon} size={iconSize} variant={this.variant}></inno-icon>\r\n\r\n            {this.inner ? headerTitle : null}\r\n\r\n          </div>\r\n\r\n          <section class={{\r\n            'accordion-content': true,\r\n            'inner': this.inner,\r\n            'light': this.variant === 'light',\r\n            'dark': this.variant === 'dark',\r\n            hide: this.collapsed,\r\n          }}>\r\n            <slot></slot>\r\n          </section>\r\n\r\n        </a>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}"],"version":3}