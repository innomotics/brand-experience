{"version":3,"names":["TypedEvent","listeners","listenersOncer","on","listener","this","push","dispose","off","once","callbackIndex","indexOf","splice","emit","event","forEach","length","toCall","pipe","te","e"],"sources":["src/utils/typed-event.ts"],"sourcesContent":["/*\r\n * SPDX-FileCopyrightText: 2023 Siemens AG\r\n *\r\n * SPDX-License-Identifier: MIT\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\nexport interface Listener<T> {\r\n  (event: T): any;\r\n}\r\n\r\nexport interface Disposable {\r\n  dispose(): void;\r\n}\r\n\r\nexport class TypedEvent<T> {\r\n  public readonly listeners: Listener<T>[] = [];\r\n  public listenersOncer: Listener<T>[] = [];\r\n\r\n  on = (listener: Listener<T>): Disposable => {\r\n    this.listeners.push(listener);\r\n    return {\r\n      dispose: () => this.off(listener),\r\n    };\r\n  };\r\n\r\n  once = (listener: Listener<T>): void => {\r\n    this.listenersOncer.push(listener);\r\n  };\r\n\r\n  off = (listener: Listener<T>) => {\r\n    const callbackIndex = this.listeners.indexOf(listener);\r\n    if (callbackIndex > -1) {\r\n      this.listeners.splice(callbackIndex, 1);\r\n    }\r\n  };\r\n\r\n  emit = (event: T) => {\r\n    /** Update any general listeners */\r\n    this.listeners.forEach(listener => listener(event));\r\n\r\n    /** Clear the `once` queue */\r\n    if (this.listenersOncer.length > 0) {\r\n      const toCall = this.listenersOncer;\r\n      this.listenersOncer = [];\r\n      toCall.forEach(listener => listener(event));\r\n    }\r\n  };\r\n\r\n  pipe = (te: TypedEvent<T>): Disposable => {\r\n    return this.on(e => te.emit(e));\r\n  };\r\n}\r\n"],"mappings":"MAiBaA,EACKC,UAA2B,GACpCC,eAAgC,GAEvCC,GAAMC,IACJC,KAAKJ,UAAUK,KAAKF,GACpB,MAAO,CACLG,QAAS,IAAMF,KAAKG,IAAIJ,GACzB,EAGHK,KAAQL,IACNC,KAAKH,eAAeI,KAAKF,EAAS,EAGpCI,IAAOJ,IACL,MAAMM,EAAgBL,KAAKJ,UAAUU,QAAQP,GAC7C,GAAIM,GAAiB,EAAG,CACtBL,KAAKJ,UAAUW,OAAOF,EAAe,E,GAIzCG,KAAQC,IAENT,KAAKJ,UAAUc,SAAQX,GAAYA,EAASU,KAG5C,GAAIT,KAAKH,eAAec,OAAS,EAAG,CAClC,MAAMC,EAASZ,KAAKH,eACpBG,KAAKH,eAAiB,GACtBe,EAAOF,SAAQX,GAAYA,EAASU,I,GAIxCI,KAAQC,GACCd,KAAKF,IAAGiB,GAAKD,EAAGN,KAAKO,Y","ignoreList":[]}