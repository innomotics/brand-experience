{"version":3,"names":["innoTimePickerCss","InnoTimePickerStyle0","HOURS","Array","keys","MINUTES","SECONDS","DEFAULT_TEXTS","confirmLabel","hourLabel","minuteLabel","secondLabel","InnoTimePicker","valueChange","componentDidLoad","button","this","hostElement","querySelector","style","width","sendValueChange","time","DateTime","fromObject","hour","selectedHour","minute","selectedMinute","second","selectedSecond","emit","toFormat","format","titleContainer","h","class","texts","hourColumn","map","classes","entry","active","key","onClick","minuteColumn","secondColumn","valuesContainer","confirmContainer","variant","render","Host"],"sources":["src/components/inno-time-picker/inno-time-picker.scss?tag=inno-time-picker&encapsulation=scoped","src/components/inno-time-picker/inno-time-picker.tsx"],"sourcesContent":["@use '../../../styles/colors' as colors;\r\n\r\n:host {\r\n  height: 400px;\r\n  width: 280px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: colors.$secondary-900;\r\n}\r\n\r\n@media screen and (max-width: 800px) {\r\n  :host {\r\n    width: 100%;\r\n  }\r\n}\r\n\r\n.title-container {\r\n  height: 64px;\r\n  padding: 24px 30px 24px 30px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  color: colors.$primary-300;\r\n  font-size: 12px;\r\n  line-height: 18px;\r\n}\r\n\r\n.title-entry {\r\n}\r\n\r\n.picker-container {\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  padding-left: 24px;\r\n  padding-right: 24px;\r\n}\r\n\r\n.entry {\r\n  width: 36px;\r\n  height: 36px;\r\n  background-color: transparent;\r\n  color: colors.$primary-300;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  font-size: 16px;\r\n  line-height: 25px;\r\n  font-family: 'InnomoticsHafferSQ';\r\n  font-weight: 200;\r\n\r\n  &.active {\r\n    background-color: colors.$primary-100;\r\n    color: colors.$primary-200;\r\n    font-weight: 800;\r\n  }\r\n\r\n  &:hover {\r\n    background-color: colors.$secondary-300;\r\n    color: colors.$primary-200;\r\n  }\r\n}\r\n\r\n.column-container {\r\n  overflow-y: scroll;\r\n  max-height: 240px;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n}\r\n\r\n.column {\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n}\r\n\r\n.confirm-container {\r\n  height: 96px;\r\n  padding: 24px;\r\n  padding-bottom: 12px; // inno-buttom bottom margin\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  & inno-button,\r\n  & inno-button > button {\r\n    width: 100% !important;\r\n  }\r\n}\r\n","import { Component, Host, h, State, Prop, Event, EventEmitter, Element } from '@stencil/core';\r\nimport { InnoTimePickerTexts } from './inno-time-picker.api';\r\nimport { DateTime } from 'luxon';\r\n\r\nconst HOURS = [...Array(24).keys()];\r\nconst MINUTES = [...Array(60).keys()];\r\nconst SECONDS = [...Array(60).keys()];\r\n\r\nconst DEFAULT_TEXTS: InnoTimePickerTexts = {\r\n  confirmLabel: 'Ok',\r\n  hourLabel: 'Hr',\r\n  minuteLabel: 'Min',\r\n  secondLabel: 'Sec',\r\n};\r\n\r\n/**\r\n *\r\n */\r\n@Component({\r\n  tag: 'inno-time-picker',\r\n  styleUrl: 'inno-time-picker.scss',\r\n  scoped: true,\r\n})\r\nexport class InnoTimePicker {\r\n  @Element() hostElement: HTMLElement & InnoTimePicker;\r\n\r\n  /**\r\n   * Theme variant of the component.\r\n   */\r\n  @Prop() theme: 'light' | 'dark' = 'light';\r\n\r\n  /**\r\n   * Component text configuration.\r\n   */\r\n  @Prop() texts?: InnoTimePickerTexts | undefined;\r\n\r\n  /**\r\n   * Date format string.\r\n   * See \"https://moment.github.io/luxon/#/formatting?id=table-of-tokens\" for all available tokens.\r\n   */\r\n  @Prop() format: string = 'HH:mm:ss';\r\n\r\n  /**\r\n   *\r\n   */\r\n  @Prop() time: string | undefined;\r\n\r\n  @State() private selectedHour: number | undefined;\r\n  @State() private selectedMinute: number | undefined;\r\n  @State() private selectedSecond: number | undefined;\r\n\r\n  /**\r\n   *\r\n   */\r\n  @Event() valueChange: EventEmitter;\r\n\r\n  componentDidLoad() {\r\n    const button = this.hostElement.querySelector('.confirm-container button') as HTMLElement;\r\n    button.style.width = '100%';\r\n  }\r\n\r\n  private sendValueChange() {\r\n    const time = DateTime.fromObject({ hour: this.selectedHour, minute: this.selectedMinute, second: this.selectedSecond });\r\n    this.valueChange.emit(time.toFormat(this.format));\r\n  }\r\n\r\n  private titleContainer() {\r\n    return (\r\n      <div class=\"title-container\">\r\n        <div>{this.texts?.hourLabel ?? DEFAULT_TEXTS.hourLabel}</div>\r\n        <div>{this.texts?.minuteLabel ?? DEFAULT_TEXTS.minuteLabel}</div>\r\n        <div>{this.texts?.secondLabel ?? DEFAULT_TEXTS.secondLabel}</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private hourColumn() {\r\n    return (\r\n      <div class=\"column-container\">\r\n        <div class=\"column\">\r\n          {HOURS.map(hour => {\r\n            const classes = { entry: true, active: hour === this.selectedHour };\r\n\r\n            return (\r\n              <div class={classes} key={hour} onClick={() => (this.selectedHour = hour)}>\r\n                {hour}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private minuteColumn() {\r\n    return (\r\n      <div class=\"column-container\">\r\n        <div class=\"column\">\r\n          {MINUTES.map(minute => {\r\n            const classes = { entry: true, active: minute === this.selectedMinute };\r\n\r\n            return (\r\n              <div class={classes} key={minute} onClick={() => (this.selectedMinute = minute)}>\r\n                {minute}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private secondColumn() {\r\n    return (\r\n      <div class=\"column-container\">\r\n        <div class=\"column\">\r\n          {SECONDS.map(second => {\r\n            const classes = { entry: true, active: second === this.selectedSecond };\r\n\r\n            return (\r\n              <div class={classes} key={second} onClick={() => (this.selectedSecond = second)}>\r\n                {second}\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private valuesContainer() {\r\n    return (\r\n      <div class=\"picker-container\">\r\n        {this.hourColumn()}\r\n        {this.minuteColumn()}\r\n        {this.secondColumn()}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private confirmContainer() {\r\n    return (\r\n      <div class=\"confirm-container\">\r\n        <inno-button variant=\"secondary\" onClick={() => this.sendValueChange()}>\r\n          {this.texts?.confirmLabel ?? DEFAULT_TEXTS.confirmLabel}\r\n        </inno-button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Host>\r\n        {this.titleContainer()}\r\n        {this.valuesContainer()}\r\n        {this.confirmContainer()}\r\n      </Host>\r\n    );\r\n  }\r\n}\r\n"],"mappings":"oGAAA,MAAMA,EAAoB,s7CAC1B,MAAAC,EAAeD,ECGf,MAAME,EAAQ,IAAIC,MAAM,IAAIC,QAC5B,MAAMC,EAAU,IAAIF,MAAM,IAAIC,QAC9B,MAAME,EAAU,IAAIH,MAAM,IAAIC,QAE9B,MAAMG,EAAqC,CACzCC,aAAc,KACdC,UAAW,KACXC,YAAa,MACbC,YAAa,O,MAWFC,EAAc,M,6EAMS,Q,iCAWT,W,6IAchBC,YAET,gBAAAC,GACE,MAAMC,EAASC,KAAKC,YAAYC,cAAc,6BAC9CH,EAAOI,MAAMC,MAAQ,M,CAGf,eAAAC,GACN,MAAMC,EAAOC,EAASC,WAAW,CAAEC,KAAMT,KAAKU,aAAcC,OAAQX,KAAKY,eAAgBC,OAAQb,KAAKc,iBACtGd,KAAKH,YAAYkB,KAAKT,EAAKU,SAAShB,KAAKiB,Q,CAGnC,cAAAC,GACN,OACEC,EAAA,OAAKC,MAAM,mBACTD,EAAA,WAAMnB,KAAKqB,OAAO5B,WAAaF,EAAcE,WAC7C0B,EAAA,WAAMnB,KAAKqB,OAAO3B,aAAeH,EAAcG,aAC/CyB,EAAA,WAAMnB,KAAKqB,OAAO1B,aAAeJ,EAAcI,a,CAK7C,UAAA2B,GACN,OACEH,EAAA,OAAKC,MAAM,oBACTD,EAAA,OAAKC,MAAM,UACRlC,EAAMqC,KAAId,IACT,MAAMe,EAAU,CAAEC,MAAO,KAAMC,OAAQjB,IAAST,KAAKU,cAErD,OACES,EAAA,OAAKC,MAAOI,EAASG,IAAKlB,EAAMmB,QAAS,IAAO5B,KAAKU,aAAeD,GACjEA,EACG,K,CAQV,YAAAoB,GACN,OACEV,EAAA,OAAKC,MAAM,oBACTD,EAAA,OAAKC,MAAM,UACR/B,EAAQkC,KAAIZ,IACX,MAAMa,EAAU,CAAEC,MAAO,KAAMC,OAAQf,IAAWX,KAAKY,gBAEvD,OACEO,EAAA,OAAKC,MAAOI,EAASG,IAAKhB,EAAQiB,QAAS,IAAO5B,KAAKY,eAAiBD,GACrEA,EACG,K,CAQV,YAAAmB,GACN,OACEX,EAAA,OAAKC,MAAM,oBACTD,EAAA,OAAKC,MAAM,UACR9B,EAAQiC,KAAIV,IACX,MAAMW,EAAU,CAAEC,MAAO,KAAMC,OAAQb,IAAWb,KAAKc,gBAEvD,OACEK,EAAA,OAAKC,MAAOI,EAASG,IAAKd,EAAQe,QAAS,IAAO5B,KAAKc,eAAiBD,GACrEA,EACG,K,CAQV,eAAAkB,GACN,OACEZ,EAAA,OAAKC,MAAM,oBACRpB,KAAKsB,aACLtB,KAAK6B,eACL7B,KAAK8B,e,CAKJ,gBAAAE,GACN,OACEb,EAAA,OAAKC,MAAM,qBACTD,EAAA,eAAac,QAAQ,YAAYL,QAAS,IAAM5B,KAAKK,mBAClDL,KAAKqB,OAAO7B,cAAgBD,EAAcC,c,CAMnD,MAAA0C,GACE,OACEf,EAACgB,EAAI,CAAAR,IAAA,4CACF3B,KAAKkB,iBACLlB,KAAK+B,kBACL/B,KAAKgC,mB","ignoreList":[]}