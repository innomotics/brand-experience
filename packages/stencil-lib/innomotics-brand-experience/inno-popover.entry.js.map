{"file":"inno-popover.entry.esm.js","mappings":";;;;;AAAA,MAAM,cAAc,GAAG,q8CAAq8C;;AC+B59C,MAAM,aAAa,GAAG,CAAC,KAAa,MAAM,KAAK,IAAI,IAAI,GAAG,GAAG,KAAK,IAAI,GAAG,EAAE,CAAC,CAAC;MAOhE,WAAW;;;;;uBAK0B,OAAO;uBAKF,MAAM;;;;yBAuBX,KAAK;sBAKX,CAAC;uBAKR,KAAK;2BAKD,KAAK;wBAKR,KAAK;8BAGhB,KAAK;;IAEtB,WAAW,CAAS;;;;IAKnB,gBAAgB,CAAqB;;;;IAKrC,iBAAiB,CAAqB;;IAIvC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACzC,iBAAiB,CAAc;IAE/B,eAAe,CAAiB;IAEhC,eAAe,CAAW;IAE1B,YAAY,CAAc;IAElC,IAAY,UAAU;QACpB,OAAO,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC;KAC7D;IAEO,iBAAiB;QACvB,IAAI,IAAI,CAAC,iBAAiB,IAAI,SAAS,EAAE;YACvC,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC1B;KACF;IAEO,aAAa,CAAC,KAAuB;QAC3C,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,EAAE;YAC5B,KAAK,EAAE,cAAc,EAAE,CAAC;YACxB,KAAK,EAAE,eAAe,EAAE,CAAC;SAC1B;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;KACF;IAEO,aAAa;QACnB,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;;;;IAMD,MAAM,WAAW;QACf,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC;QACtC,IAAI,CAAC,CAAC,aAAa,EAAE;YACnB,IAAI,CAAC,cAAc,EAAE,CAAC;YACtB,MAAM,IAAI,CAAC,oCAAoC,CAAC,aAAa,CAAC,CAAC;YAC/D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;SAC9B;KACF;;;;IAMD,MAAM,WAAW;QACf,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,CAAC;KAC/B;;;;;;;;IAUD,MAAM,gBAAgB,CAAC,aAAqB,IAAI;QAC9C,IAAI,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,EAAE;YAC7D,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,IAAI,CAAC,eAAe,EAAE;gBACxB,IAAI,CAAC,eAAe,EAAE,CAAC;aACxB;SACF;QAED,IAAI,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,EAAE;YACxC,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;SAC/B;QAED,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC;QACtC,IAAI,CAAC,CAAC,aAAa,EAAE;YACnB,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAE7B,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,MAAM,IAAI,CAAC,oCAAoC,CAAC,aAAa,CAAC,CAAC;aAChE;iBAAM;gBACL,MAAM,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,CAAC;aAC3C;YAED,OAAO,IAAI,CAAC;SACb;QAED,OAAO,KAAK,CAAC;KACd;IAEO,cAAc;QACpB,IAAI,eAAe,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,CAAC;QAEnE,IAAI,eAAe,EAAE;YACnB,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACrD,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;YAC5D,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,GAAG;;;;;;;;;;OAUpC,CAAC;YACF,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SACjD;KACF;IAEO,eAAe;QACrB,IAAI,CAAC,CAAC,IAAI,CAAC,eAAe,EAAE;YAC1B,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC;YAC9B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;SAC7B;KACF;IAGD,cAAc;QACZ,IAAI,IAAI,CAAC,OAAO,KAAK,QAAQ,EAAE;YAC7B,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChB,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;iBAAM;gBACL,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;SACF;KACF;IAEO,oBAAoB,CAAC,EAC3B,SAAS,EACT,cAAc,EACQ;QACtB,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,cAAc,CAAC,KAAK,CAAC;QAEpC,IAAI,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;YAC/B,OAAO;gBACL,IAAI,EAAE,aAAa,CAAC,CAAC,CAAC;gBACtB,MAAM,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;aAC1B,CAAC;SACH;QAED,IAAI,SAAS,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE;YACjC,OAAO;gBACL,IAAI,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;gBACvB,GAAG,EAAE,aAAa,CAAC,CAAC,CAAC;aACtB,CAAC;SACH;QAED,IAAI,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;YAClC,OAAO;gBACL,IAAI,EAAE,aAAa,CAAC,CAAC,CAAC;gBACtB,GAAG,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;aACvB,CAAC;SACH;QAED,IAAI,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE;YAChC,OAAO;gBACL,KAAK,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;gBACxB,GAAG,EAAE,aAAa,CAAC,CAAC,CAAC;aACtB,CAAC;SACH;KACF;IAEO,MAAM,eAAe,CAAC,MAAe;QAC3C,OAAO,IAAI,OAAO,CAAO,OAAO,OAAO;YACrC,MAAM,eAAe,GAAG,MAAM,eAAe,CAC3C,MAAM,EACN,IAAI,CAAC,WAAW,EAChB;gBACE,QAAQ,EAAE,OAAO;gBACjB,SAAS,EAAE,IAAI,CAAC,SAAS;gBACzB,UAAU,EAAE;oBACV,MAAM,CAAC;wBACL,QAAQ,EAAE,IAAI,CAAC,MAAM;qBACtB,CAAC;oBACF,KAAK,EAAE;oBACP,IAAI,CAAC;wBACH,QAAQ,EAAE,IAAI;wBACd,SAAS,EAAE,IAAI;wBACf,yBAAyB,EAAE,OAAO;wBAClC,gBAAgB,EAAE,SAAS;wBAC3B,OAAO,EAAE,CAAC;qBACX,CAAC;oBACF,KAAK,CAAC;wBACJ,OAAO,EAAE,IAAI,CAAC,YAAY;wBAC1B,OAAO,EAAE,EAAE;qBACZ,CAAC;iBACH;aACF,CACF,CAAC;YAEF,IAAI,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,CAAC,eAAe,CAAC,cAAc,CAAC,KAAK,EAAE;gBACjE,MAAM,aAAa,GAAG,IAAI,CAAC,oBAAoB,CAAC,eAAe,CAAC,CAAC;gBACjE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;gBACtC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;gBACzC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;gBACxC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;gBACvC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;aACvD;YAED,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,eAAe,CAAC;YACjC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE;gBACpC,IAAI,EAAE,CAAC,KAAK,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,EAAE;gBAChC,GAAG,EAAE,CAAC,KAAK,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,EAAE;aAChC,CAAC,CAAC;YAEH,OAAO,EAAE,CAAC;SACX,CAAC,CAAC;KACJ;IAEO,MAAM,oCAAoC,CAAC,MAAe;QAChE,IAAI,CAAC,MAAM,EAAE;YACX,OAAO;SACR;QAED,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAEnC,OAAO,IAAI,OAAO,CAAO,CAAC,OAAO;YAC/B,IAAI,CAAC,iBAAiB,GAAG,UAAU,CACjC,MAAM,EACN,IAAI,CAAC,WAAW,EAChB;gBACE,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;gBACnC,OAAO,EAAE,CAAC;aACX,EACD;gBACE,cAAc,EAAE,IAAI;gBACpB,cAAc,EAAE,IAAI;gBACpB,aAAa,EAAE,IAAI;gBACnB,WAAW,EAAE,IAAI;gBACjB,cAAc,EAAE,IAAI,CAAC,cAAc;aACpC,CACF,CAAC;SACH,CAAC,CAAC;KACJ;IAEO,sBAAsB;QAC5B,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,EAAE;YAC5B,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YACnC,UAAU,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACzD,UAAU,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACzD,UAAU,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YACtD,UAAU,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEvD,IAAI,CAAC,eAAe,GAAG;gBACrB,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;gBACnC,UAAU,EAAE,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC7D,UAAU,EAAE,mBAAmB,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC7D,UAAU,EAAE,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC1D,UAAU,EAAE,mBAAmB,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC5D,CAAC;SACH;QAAA,CAAC;KACH;IAEO,qBAAqB;QAC3B,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,EAAE;YAC5B,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEzD,IAAI,CAAC,eAAe,GAAG;gBACrB,IAAI,CAAC,UAAU,EAAE,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;aAC9D,CAAC;SACH;KACF;IAGD,MAAM,SAAS,CAAC,KAAoB;QAClC,IAAI,IAAI,CAAC,OAAO,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;YAC3C,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;KACF;IAGD,MAAM,OAAO,CAAC,KAAuB;QACnC,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,OAAO,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,WAAW,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAc,CAAC;mBACjH,IAAI,CAAC,OAAO,KAAK,OAAO,EAAE;gBAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;aACpB;SACF;KACF;IAED,gBAAgB;QACd,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,EAAE;YAC3B,OAAO,CAAC,IAAI,CAAC,uFAAuF,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;YACjH,OAAO;SACR;QAED,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC;QAC5B,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,IAAI,CAAC,qBAAqB,EAAE,CAAC;KAC9B;IAED,oBAAoB;QAClB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;QAED,IAAI,CAAC,eAAe,EAAE,CAAC;KACxB;IAED,MAAM;QACJ,IAAI,WAAW,GAAY,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,OAAO,KAAK,OAAO,CAAC;QACrE,IAAI,YAAY,GAAY,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,KAAK,EAAE,CAAC;QAC5E,IAAI,OAAO,GAAY,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,KAAK,EAAE,CAAC;QACrE,IAAI,cAAc,GAAY,YAAY,IAAI,WAAW,CAAC;QAC1D,IAAI,YAAY,GAAY,WAAW,IAAI,CAAC,YAAY,CAAC;QAEzD,QACE,EAAC,IAAI,qDAAC,KAAK,EAAE;gBACX,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,KAAK,EAAE,IAAI,CAAC,OAAO,KAAK,OAAO;gBAC/B,IAAI,EAAE,IAAI,CAAC,OAAO,KAAK,MAAM;aAC9B,IACC,4DAAK,KAAK,EAAC,iBAAiB,IACzB,cAAc;;gBAEb,WAAK,KAAK,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,gBAAgB,EAAE,YAAY,EAAE,IACtE,YAAY,GAAG,WAAK,KAAK,EAAC,eAAe,EAAC,SAAS,EAAEA,cAAY,CAAC,IAAI,CAAC,YAAY,CAAC,GAAQ,GAAG,IAAI,EACnG,WAAW,GAAG,iBAAW,IAAI,EAAC,OAAO,EAAC,IAAI,EAAE,EAAE,EAAE,OAAO,EAAE,MAAM,IAAI,CAAC,WAAW,EAAE,GAAc,GAAG,IAAI,CACnG;cACJ,IAAI,EACP,OAAO,GAAG,WAAK,KAAK,EAAC,cAAc,EAAC,SAAS,EAAEA,cAAY,CAAC,IAAI,CAAC,WAAW,CAAC,GAAQ,GAAG,IAAI,EAC7F,8DAAa,CACT,EACN,4DAAK,GAAG,EAAE,GAAG,IAAI,IAAI,CAAC,YAAY,GAAG,GAAG,EAAE,KAAK,EAAC,OAAO,GAAO,CACzD,EACP;KACH;;;;;;;;;","names":["sanitizeHtml"],"sources":["src/components/inno-popover/inno-popover.scss?tag=inno-popover&encapsulation=scoped","src/components/inno-popover/inno-popover.tsx"],"sourcesContent":["@use '@innomotics/brand-experience/styles/colors';\r\n\r\n:host {\r\n  display: inline-block;\r\n  position: fixed;\r\n  left: 0px;\r\n  top: 0px;\r\n  z-index: 1001;\r\n  color: colors.$primary-300;\r\n  font-weight: 300;\r\n  font-size: 14px;\r\n  opacity: 0;\r\n  visibility: collapse !important;\r\n  overflow-wrap: break-word;\r\n  width: max-content;\r\n  max-width: 90vw;\r\n\r\n  background-color: colors.$additional-light-400;\r\n  padding: 16px;\r\n\r\n  box-shadow: 0px 2px 5px 0px rgba(colors.$primary-200, .8);\r\n\r\n  .tooltip-title-row {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 16px;\r\n\r\n    .tooltip-title {\r\n      display: block;\r\n      font-size: 24px;\r\n      line-height: 130%;\r\n      font-weight: 700;\r\n    }\r\n\r\n    inno-icon {\r\n      margin-left: 16px;\r\n      cursor: pointer;\r\n    }\r\n\r\n    &.only-close-btn {\r\n      justify-content: flex-end;\r\n    }\r\n  }\r\n\r\n  .tooltip-text {\r\n    display: block;\r\n  }\r\n}\r\n\r\n:host(.visible) {\r\n  opacity: 1;\r\n  visibility: visible !important;\r\n}\r\n\r\n:host(.visible) {\r\n\r\n  .arrow,\r\n  .arrow::before {\r\n    position: absolute;\r\n    width: 8px;\r\n    height: 8px;\r\n    background: inherit;\r\n  }\r\n\r\n  .arrow {\r\n    visibility: hidden;\r\n  }\r\n\r\n  .arrow::before {\r\n    visibility: visible;\r\n    content: '';\r\n    transform: rotate(45deg);\r\n    background-color: inherit;\r\n  }\r\n}\r\n\r\n:host(.dark) {\r\n  color: colors.$primary-300;\r\n  background-color: colors.$additional-light-400;\r\n}\r\n\r\n:host(.light) {\r\n  color: colors.$primary-200;\r\n  background-color: colors.$additional-dark-400;\r\n}","import {\r\n  arrow,\r\n  autoUpdate,\r\n  computePosition,\r\n  ComputePositionReturn,\r\n  flip,\r\n  offset,\r\n  shift,\r\n  Placement\r\n} from '@floating-ui/dom';\r\nimport {\r\n  Component,\r\n  Element,\r\n  Event,\r\n  EventEmitter,\r\n  h,\r\n  Host,\r\n  Listen,\r\n  Method,\r\n  Prop,\r\n  Watch\r\n} from '@stencil/core';\r\nimport sanitizeHtml from 'sanitize-html';\r\n\r\ntype ArrowPosition = {\r\n  top?: string;\r\n  left?: string;\r\n  right?: string;\r\n  bottom?: string;\r\n};\r\n\r\nconst numberToPixel = (value: number) => (value != null ? `${value}px` : '');\r\n\r\n@Component({\r\n  tag: 'inno-popover',\r\n  styleUrl: 'inno-popover.scss',\r\n  scoped: true\r\n})\r\nexport class InnoPopover {\r\n\r\n  /**\r\n   * How to show the popover. If set to 'manual' then you need to programatically modify the 'visibile' property.\r\n   */\r\n  @Prop() trigger: 'hover' | 'click' | 'manual' = 'click';\r\n\r\n  /**\r\n   * Color variant of the popover.\r\n   */\r\n  @Prop({ mutable: true }) variant: 'light' | 'dark' = 'dark';\r\n\r\n  /**\r\n   * Css selector of the element the popover is for. This is just the initial value, \r\n   * don't update it manually. Use the 'updateForElement(...)' method instead.\r\n   */\r\n  @Prop() for: string;\r\n\r\n  /**\r\n   * Contents of the title. Can be either html or a simple string. Can be omitted.\r\n   */\r\n  @Prop({ mutable: true }) popoverTitle: string;\r\n\r\n  /**\r\n   * Contents of the text. Can be either html or a simple string. Can be omitted. You can use this property if you want a simple tooltip, \r\n   * otherwise you can provide your own html directly.\r\n   */\r\n  @Prop({ mutable: true }) popoverText: string;\r\n\r\n  /**\r\n   * Position of the popover. If there is not enough space it will be automatically placed to where it has enough place.\r\n   * Please note that the offset will remain the same in case the desired placement does not fit.\r\n   */\r\n  @Prop({ mutable: true }) placement: Placement = 'top';\r\n\r\n  /**\r\n   * Offset of the popover position in pixels. Please note that the offset will remain the same in case the desired placement does not fit.\r\n   */\r\n  @Prop({ mutable: true }) offset: number = 8;\r\n\r\n  /**\r\n   * Programatically change whether the popover is visible or not.\r\n   */\r\n  @Prop({ mutable: true }) visible = false;\r\n\r\n  /**\r\n   * Popover should have a backdrop. Has no effect if trigger type is 'hover'.\r\n   */\r\n  @Prop({ mutable: true }) hasBackdrop = false;\r\n\r\n  /**\r\n   * Popover will have a close button. Has no effect if trigger type is 'hover'.\r\n   */\r\n  @Prop({ mutable: true }) closable = false;\r\n\r\n  /** @internal */\r\n  @Prop() animationFrame = false;\r\n\r\n  private forInternal: string;\r\n\r\n  /**\r\n   * Fired when popover is shown.\r\n   */\r\n  @Event() innoPopoverShown: EventEmitter<void>;\r\n\r\n  /**\r\n   * Fired when popover is hidden.\r\n   */\r\n  @Event() innoPopoverHidden: EventEmitter<void>;\r\n\r\n  @Element() hostElement: HTMLInnoPopoverElement;\r\n\r\n  private showBind = this.onTooltipShow.bind(this);\r\n  private hideBind = this.onTooltipHide.bind(this);\r\n  private disposeAutoUpdate?: () => void;\r\n\r\n  private backdropElement: HTMLDivElement;\r\n\r\n  private disposeListener: Function;\r\n\r\n  private arrowElement: HTMLElement;\r\n\r\n  private get forElement() {\r\n    return document.querySelector(this.forInternal ?? this.for);\r\n  }\r\n\r\n  private destroyAutoUpdate() {\r\n    if (this.disposeAutoUpdate != undefined) {\r\n      this.disposeAutoUpdate();\r\n    }\r\n  }\r\n\r\n  private onTooltipShow(event: globalThis.Event) {\r\n    if (this.trigger === 'click') {\r\n      event?.preventDefault();\r\n      event?.stopPropagation();\r\n    }\r\n\r\n    if (!this.visible) {\r\n      this.showTooltip();\r\n    }\r\n  }\r\n\r\n  private onTooltipHide() {\r\n    this.hideTooltip();\r\n  }\r\n\r\n  /**\r\n   * Show the tooltip.\r\n   */\r\n  @Method()\r\n  async showTooltip() {\r\n    const anchorElement = this.forElement;\r\n    if (!!anchorElement) {\r\n      this.createBackdrop();\r\n      await this.computeTooltipPositionWithAutoUpdate(anchorElement);\r\n      this.visible = true;\r\n      this.innoPopoverShown.emit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Hide the tooltip.\r\n   */\r\n  @Method()\r\n  async hideTooltip() {\r\n    this.destroyBackdrop();\r\n    this.destroyAutoUpdate();\r\n    this.visible = false;\r\n    this.innoPopoverHidden.emit();\r\n  }\r\n\r\n  /**\r\n   * Updates the element the popover is for including all the internal event listeners and the popover's position.\r\n   * If called without a parameter it will refresh the internal event listeners and the popover's position for the current target element.\r\n   * If called with a nonexisting selector it will refresh the internal event listeners and the popover's position for the current target element.\r\n   * Returns a Promise which is 'true' when the update/refresh succeded. \r\n   * Returns 'false' if neither the current target element nor the element from the parameter exists. \r\n   */\r\n  @Method()\r\n  async updateForElement(forElement: string = null) {\r\n    if (!!document.querySelector(forElement) || !!this.forElement) {\r\n      this.destroyAutoUpdate();\r\n      if (this.disposeListener) {\r\n        this.disposeListener();\r\n      }\r\n    }\r\n\r\n    if (!!document.querySelector(forElement)) {\r\n      this.forInternal = forElement;\r\n    }\r\n\r\n    const anchorElement = this.forElement;\r\n    if (!!anchorElement) {\r\n      this.registerHoverListeners();\r\n      this.registerClickListener();\r\n\r\n      if (this.visible) {\r\n        await this.computeTooltipPositionWithAutoUpdate(anchorElement);\r\n      } else {\r\n        await this.computePosition(anchorElement);\r\n      }\r\n\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private createBackdrop(): void {\r\n    let backdropVisible = this.hasBackdrop && this.trigger !== 'hover';\r\n\r\n    if (backdropVisible) {\r\n      this.backdropElement = document.createElement(\"div\");\r\n      this.backdropElement.classList.add(\"inno-popover-backdrop\");\r\n      this.backdropElement.style.cssText = `\r\n        display: block;\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1000;\r\n        width: 100vw;\r\n        height: 100vh;\r\n        background-color: white;\r\n        opacity: 0.6;\r\n      `;\r\n      document.body.appendChild(this.backdropElement);\r\n    }\r\n  }\r\n\r\n  private destroyBackdrop(): void {\r\n    if (!!this.backdropElement) {\r\n      this.backdropElement.remove();\r\n      this.backdropElement = null;\r\n    }\r\n  }\r\n\r\n  @Watch('visible')\r\n  visibleChanged() {\r\n    if (this.trigger === 'manual') {\r\n      if (this.visible) {\r\n        this.showTooltip();\r\n      } else {\r\n        this.hideTooltip();\r\n      }\r\n    }\r\n  }\r\n\r\n  private computeArrowPosition({\r\n    placement,\r\n    middlewareData\r\n  }: ComputePositionReturn): ArrowPosition {\r\n    let { x, y } = middlewareData.arrow;\r\n\r\n    if (placement.startsWith('top')) {\r\n      return {\r\n        left: numberToPixel(x),\r\n        bottom: numberToPixel(-4)\r\n      };\r\n    }\r\n\r\n    if (placement.startsWith('right')) {\r\n      return {\r\n        left: numberToPixel(-4),\r\n        top: numberToPixel(y)\r\n      };\r\n    }\r\n\r\n    if (placement.startsWith('bottom')) {\r\n      return {\r\n        left: numberToPixel(x),\r\n        top: numberToPixel(-4)\r\n      };\r\n    }\r\n\r\n    if (placement.startsWith('left')) {\r\n      return {\r\n        right: numberToPixel(-4),\r\n        top: numberToPixel(y)\r\n      };\r\n    }\r\n  }\r\n\r\n  private async computePosition(target: Element) {\r\n    return new Promise<void>(async (resolve) => {\r\n      const computeResponse = await computePosition(\r\n        target,\r\n        this.hostElement,\r\n        {\r\n          strategy: 'fixed',\r\n          placement: this.placement,\r\n          middleware: [\r\n            offset({\r\n              mainAxis: this.offset\r\n            }),\r\n            shift(),\r\n            flip({\r\n              mainAxis: true,\r\n              crossAxis: true,\r\n              fallbackAxisSideDirection: 'start',\r\n              fallbackStrategy: 'bestFit',\r\n              padding: 5\r\n            }),\r\n            arrow({\r\n              element: this.arrowElement,\r\n              padding: 16\r\n            })\r\n          ]\r\n        }\r\n      );\r\n\r\n      if (!!this.arrowElement && !!computeResponse.middlewareData.arrow) {\r\n        const arrowPosition = this.computeArrowPosition(computeResponse);\r\n        this.arrowElement.style.top = \"unset\";\r\n        this.arrowElement.style.bottom = \"unset\";\r\n        this.arrowElement.style.right = \"unset\";\r\n        this.arrowElement.style.left = \"unset\";\r\n        Object.assign(this.arrowElement.style, arrowPosition);\r\n      }\r\n\r\n      const { x, y } = computeResponse;\r\n      Object.assign(this.hostElement.style, {\r\n        left: x !== null ? `${x}px` : '',\r\n        top: y !== null ? `${y}px` : ''\r\n      });\r\n\r\n      resolve();\r\n    });\r\n  }\r\n\r\n  private async computeTooltipPositionWithAutoUpdate(target: Element) {\r\n    if (!target) {\r\n      return;\r\n    }\r\n\r\n    await this.computePosition(target);\r\n\r\n    return new Promise<void>((resolve) => {\r\n      this.disposeAutoUpdate = autoUpdate(\r\n        target,\r\n        this.hostElement,\r\n        async () => {\r\n          await this.computePosition(target);\r\n          resolve();\r\n        },\r\n        {\r\n          ancestorResize: true,\r\n          ancestorScroll: true,\r\n          elementResize: true,\r\n          layoutShift: true,\r\n          animationFrame: this.animationFrame\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  private registerHoverListeners() {\r\n    if (this.trigger === 'hover') {\r\n      const forElement = this.forElement;\r\n      forElement.addEventListener('mouseenter', this.showBind);\r\n      forElement.addEventListener('mouseleave', this.hideBind);\r\n      forElement.addEventListener('focusin', this.showBind);\r\n      forElement.addEventListener('focusout', this.hideBind);\r\n\r\n      this.disposeListener = () => {\r\n        const forElement = this.forElement;\r\n        forElement?.removeEventListener('mouseenter', this.showBind);\r\n        forElement?.removeEventListener('mouseleave', this.hideBind);\r\n        forElement?.removeEventListener('focusin', this.showBind);\r\n        forElement?.removeEventListener('focusout', this.hideBind);\r\n      };\r\n    };\r\n  }\r\n\r\n  private registerClickListener() {\r\n    if (this.trigger === 'click') {\r\n      this.forElement.addEventListener('click', this.showBind);\r\n\r\n      this.disposeListener = () => {\r\n        this.forElement?.removeEventListener('click', this.showBind);\r\n      };\r\n    }\r\n  }\r\n\r\n  @Listen('keydown', { target: 'window' })\r\n  async onKeydown(event: KeyboardEvent) {\r\n    if (this.visible && event.code === 'Escape') {\r\n      this.hideTooltip();\r\n    }\r\n  }\r\n\r\n  @Listen('click', { target: 'window' })\r\n  async onClick(event: globalThis.Event) {\r\n    if (this.visible) {\r\n      if ((this.trigger === 'click' && event.target !== this.hostElement && !this.hostElement.contains(event.target as Node))\r\n        || this.trigger === 'hover') {\r\n        this.hideTooltip();\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidLoad() {\r\n    if (this.forElement == null) {\r\n      console.info(\"No valid html element found for the css selector in the 'for' property, 'for' value: \" + this.for);\r\n      return;\r\n    }\r\n\r\n    this.forInternal = this.for;\r\n    this.registerHoverListeners();\r\n    this.registerClickListener();\r\n  }\r\n\r\n  disconnectedCallback() {\r\n    this.destroyAutoUpdate();\r\n\r\n    if (this.disposeListener) {\r\n      this.disposeListener();\r\n    }\r\n\r\n    this.destroyBackdrop();\r\n  }\r\n\r\n  render() {\r\n    let hasCloseBtn: boolean = this.closable && this.trigger !== 'hover';\r\n    let hasTitleText: boolean = !!this.popoverTitle && this.popoverTitle !== '';\r\n    let hasText: boolean = !!this.popoverText && this.popoverText !== '';\r\n    let renderTitleRow: boolean = hasTitleText || hasCloseBtn;\r\n    let onlyCloseBtn: boolean = hasCloseBtn && !hasTitleText;\r\n\r\n    return (\r\n      <Host class={{\r\n        visible: this.visible,\r\n        light: this.variant === 'light',\r\n        dark: this.variant === 'dark'\r\n      }}>\r\n        <div class=\"tooltip-content\">\r\n          {renderTitleRow\r\n            ?\r\n            <div class={{ \"tooltip-title-row\": true, \"only-close-btn\": onlyCloseBtn }}>\r\n              {hasTitleText ? <div class=\"tooltip-title\" innerHTML={sanitizeHtml(this.popoverTitle)}></div> : null}\r\n              {hasCloseBtn ? <inno-icon icon='close' size={24} onClick={() => this.hideTooltip()}></inno-icon> : null}\r\n            </div>\r\n            : null}\r\n          {hasText ? <div class=\"tooltip-text\" innerHTML={sanitizeHtml(this.popoverText)}></div> : null}\r\n          <slot></slot>\r\n        </div>\r\n        <div ref={ref => this.arrowElement = ref} class=\"arrow\"></div>\r\n      </Host>\r\n    );\r\n  }\r\n\r\n}\r\n"],"version":3}